PROCESS_TARGETS_DEFINED has not changed from 'coreir= cpu= clockwork='
HALIDE_GEN_ARGS still empty
echo ./bin
./bin
echo hdr_plus
hdr_plus
echo hdr_plus
hdr_plus
echo host-x86-64
host-x86-64
echo 

echo 

echo 

bin/hdr_plus.generator -g hdr_plus -f hdr_plus target=host-x86-64-clockwork -e clockwork,html    -o ./bin
found an xcel for func provisional_output_global_wrapper with loop xo of type CombinedCallFunc
processing provisional_output_global_wrapper
Found an xcel call: _hls_target.provisional_output_global_wrapper
Found an accelerator: _hls_accelerator.provisional_output_global_wrapper
hw_input DEBUG 1 5
hw_input DEBUG 2 5
provisional_output_global_wrapper DEBUG 1 5
provisional_output_global_wrapper DEBUG 4 5
provisional_output_global_wrapper DEBUG 5 5
provisional_output_global_wrapper DEBUG 6 5
hw_input_global_wrapper DEBUG 1 5
hw_input_global_wrapper DEBUG 2 5
provisional_output DEBUG 1 5
provisional_output DEBUG 2 5
hw_input_global_wrapper_global_wrapper DEBUG 1 5
hw_input_global_wrapper_global_wrapper DEBUG 2 5
hw_input_copy DEBUG 1 5
hw_input_copy DEBUG 2 5
gray DEBUG 1 5
gray DEBUG 2 5
f0 DEBUG 1 5
f0 DEBUG 2 5
f1 DEBUG 1 5
f1 DEBUG 2 5
f2 DEBUG 1 5
f2 DEBUG 2 5
f3 DEBUG 1 5
f3 DEBUG 2 5
f4 DEBUG 1 5
f4 DEBUG 2 5
f13 DEBUG 1 5
f13 DEBUG 2 5
min_y_lvl_4 DEBUG 1 5
min_y_lvl_4 DEBUG 2 5
min_val_lvl_4 DEBUG 1 5
min_val_lvl_4 DEBUG 2 5
sum DEBUG 1 5
sum DEBUG 2 5
sum DEBUG 1 5
sum DEBUG 2 5
min_x_lvl_4 DEBUG 1 5
min_x_lvl_4 DEBUG 2 5
min_val_lvl_4 DEBUG 1 5
min_val_lvl_4 DEBUG 2 5
sum DEBUG 1 5
sum DEBUG 2 5
sum DEBUG 1 5
sum DEBUG 2 5
f12 DEBUG 1 5
f12 DEBUG 2 5
min_y_lvl_3 DEBUG 1 5
min_y_lvl_3 DEBUG 2 5
min_val_lvl_3 DEBUG 1 5
min_val_lvl_3 DEBUG 2 5
sum$1 DEBUG 1 5
sum$1 DEBUG 2 5
sum$1 DEBUG 1 5
sum$1 DEBUG 2 5
min_x_lvl_3 DEBUG 1 5
min_x_lvl_3 DEBUG 2 5
min_val_lvl_3 DEBUG 1 5
min_val_lvl_3 DEBUG 2 5
sum$1 DEBUG 1 5
sum$1 DEBUG 2 5
sum$1 DEBUG 1 5
sum$1 DEBUG 2 5
f11 DEBUG 1 5
f11 DEBUG 2 5
min_y_lvl_2 DEBUG 1 5
min_y_lvl_2 DEBUG 2 5
min_val_lvl_2 DEBUG 1 5
min_val_lvl_2 DEBUG 2 5
sum$2 DEBUG 1 5
sum$2 DEBUG 2 5
sum$2 DEBUG 1 5
sum$2 DEBUG 2 5
min_x_lvl_2 DEBUG 1 5
min_x_lvl_2 DEBUG 2 5
min_val_lvl_2 DEBUG 1 5
min_val_lvl_2 DEBUG 2 5
sum$2 DEBUG 1 5
sum$2 DEBUG 2 5
sum$2 DEBUG 1 5
sum$2 DEBUG 2 5
f10 DEBUG 1 5
f10 DEBUG 2 5
min_y_lvl_1 DEBUG 1 5
min_y_lvl_1 DEBUG 2 5
min_val_lvl_1 DEBUG 1 5
min_val_lvl_1 DEBUG 2 5
sum$3 DEBUG 1 5
sum$3 DEBUG 2 5
sum$3 DEBUG 1 5
sum$3 DEBUG 2 5
min_x_lvl_1 DEBUG 1 5
min_x_lvl_1 DEBUG 2 5
min_val_lvl_1 DEBUG 1 5
min_val_lvl_1 DEBUG 2 5
sum$3 DEBUG 1 5
sum$3 DEBUG 2 5
sum$3 DEBUG 1 5
sum$3 DEBUG 2 5
f9 DEBUG 1 5
f9 DEBUG 2 5
min_y_lvl_0 DEBUG 1 5
min_y_lvl_0 DEBUG 2 5
min_val_lvl_0 DEBUG 1 5
min_val_lvl_0 DEBUG 2 5
sum$4 DEBUG 1 5
sum$4 DEBUG 2 5
sum$4 DEBUG 1 5
sum$4 DEBUG 2 5
min_x_lvl_0 DEBUG 1 5
min_x_lvl_0 DEBUG 2 5
min_val_lvl_0 DEBUG 1 5
min_val_lvl_0 DEBUG 2 5
sum$4 DEBUG 1 5
sum$4 DEBUG 2 5
sum$4 DEBUG 1 5
sum$4 DEBUG 2 5
val DEBUG 1 5
val DEBUG 2 5
dist_tile DEBUG 1 5
dist_tile DEBUG 2 5
sum$5 DEBUG 1 5
sum$5 DEBUG 2 5
dist_tile_norm DEBUG 1 5
dist_tile_norm DEBUG 2 5
weight DEBUG 1 5
weight DEBUG 2 5
output_tiled DEBUG 1 5
output_tiled DEBUG 2 5
sum$7 DEBUG 1 5
sum$7 DEBUG 2 5
sum_weight DEBUG 1 5
sum_weight DEBUG 2 5
sum$6 DEBUG 1 5
sum$6 DEBUG 2 5
output_tiled_normalized_cosined DEBUG 1 5
output_tiled_normalized_cosined DEBUG 2 5
final_merge_output DEBUG 1 5
final_merge_output DEBUG 2 5
provisional_output_global_wrapper DEBUG 7 5
DEBUG 8
Lowering after final simplification:
assert((reinterpret(uint64, output.buffer) != (uint64)0), halide_error_buffer_argument_is_null("output"))
assert((reinterpret(uint64, input.buffer) != (uint64)0), halide_error_buffer_argument_is_null("input"))
if (_halide_buffer_is_bounds_query(input.buffer)) {
  let t5859 = (_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0))
  let t5860 = max(_halide_buffer_get_min(input.buffer, 0), (min(t5859, 1) + -1))
  let t5861.s = max(min(t5859, 512), (_halide_buffer_get_min(input.buffer, 0) + 1))
  let t5862 = (_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1))
  let t5863 = max(_halide_buffer_get_min(input.buffer, 1), (min(t5862, 1) + -1))
  let t5864.s = max(min(t5862, 512), (_halide_buffer_get_min(input.buffer, 1) + 1))
  let t5865 = (_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2))
  let t5866 = max(_halide_buffer_get_min(input.buffer, 2), (min(t5865, 1) + -1))
  _halide_buffer_init(input.buffer, _halide_buffer_get_shape(input.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 3, make_struct((halide_dimension_t *), t5860, (t5861.s - t5860), 1, 0, t5863, (t5864.s - t5863), (t5861.s - t5860), 0, t5866, (max(min(t5865, 3), (_halide_buffer_get_min(input.buffer, 2) + 1)) - t5866), ((t5861.s - t5860)*(t5864.s - t5863)), 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(output.buffer)) {
  _halide_buffer_init(output.buffer, _halide_buffer_get_shape(output.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 8, 3, make_struct((halide_dimension_t *), 0, 512, 1, 0, 0, 512, 512, 0, 0, 3, 262144, 0), (uint64)0)
}
if (!(_halide_buffer_is_bounds_query(input.buffer) || _halide_buffer_is_bounds_query(output.buffer))) {
  assert((_halide_buffer_get_type(input.buffer) == (uint32)69633), halide_error_bad_type("Input buffer input", _halide_buffer_get_type(input.buffer), (uint32)69633))
  assert((_halide_buffer_get_dimensions(input.buffer) == 3), halide_error_bad_dimensions("Input buffer input", _halide_buffer_get_dimensions(input.buffer), 3))
  assert((_halide_buffer_get_type(output.buffer) == (uint32)67585), halide_error_bad_type("Output buffer output", _halide_buffer_get_type(output.buffer), (uint32)67585))
  assert((_halide_buffer_get_dimensions(output.buffer) == 3), halide_error_bad_dimensions("Output buffer output", _halide_buffer_get_dimensions(output.buffer), 3))
  assert((let t5984 = (_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) in (max(min(t5984, 512), (_halide_buffer_get_min(input.buffer, 0) + 1)) <= t5984)), (let t5985 = (_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) in halide_error_access_out_of_bounds("Input buffer input", 0, max(_halide_buffer_get_min(input.buffer, 0), (min(t5985, 1) + -1)), max(_halide_buffer_get_min(input.buffer, 0), (min(t5985, 512) + -1)), _halide_buffer_get_min(input.buffer, 0), (t5985 + -1))))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 0)), halide_error_buffer_extents_negative("Input buffer input", 0, _halide_buffer_get_extent(input.buffer, 0)))
  assert((let t5986 = (_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) in (max(min(t5986, 512), (_halide_buffer_get_min(input.buffer, 1) + 1)) <= t5986)), (let t5987 = (_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) in halide_error_access_out_of_bounds("Input buffer input", 1, max(_halide_buffer_get_min(input.buffer, 1), (min(t5987, 1) + -1)), max(_halide_buffer_get_min(input.buffer, 1), (min(t5987, 512) + -1)), _halide_buffer_get_min(input.buffer, 1), (t5987 + -1))))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 1)), halide_error_buffer_extents_negative("Input buffer input", 1, _halide_buffer_get_extent(input.buffer, 1)))
  assert((let t5988 = (_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)) in (max(min(t5988, 3), (_halide_buffer_get_min(input.buffer, 2) + 1)) <= t5988)), (let t5989 = (_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)) in halide_error_access_out_of_bounds("Input buffer input", 2, max(_halide_buffer_get_min(input.buffer, 2), (min(t5989, 1) + -1)), max(_halide_buffer_get_min(input.buffer, 2), (min(t5989, 3) + -1)), _halide_buffer_get_min(input.buffer, 2), (t5989 + -1))))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 2)), halide_error_buffer_extents_negative("Input buffer input", 2, _halide_buffer_get_extent(input.buffer, 2)))
  assert(((_halide_buffer_get_min(output.buffer, 0) <= 0) && (512 <= (_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)))), halide_error_access_out_of_bounds("Output buffer output", 0, 0, 511, _halide_buffer_get_min(output.buffer, 0), ((_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 0)), halide_error_buffer_extents_negative("Output buffer output", 0, _halide_buffer_get_extent(output.buffer, 0)))
  assert(((_halide_buffer_get_min(output.buffer, 1) <= 0) && (512 <= (_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)))), halide_error_access_out_of_bounds("Output buffer output", 1, 0, 511, _halide_buffer_get_min(output.buffer, 1), ((_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 1)), halide_error_buffer_extents_negative("Output buffer output", 1, _halide_buffer_get_extent(output.buffer, 1)))
  assert(((_halide_buffer_get_min(output.buffer, 2) <= 0) && (3 <= (_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)))), halide_error_access_out_of_bounds("Output buffer output", 2, 0, 2, _halide_buffer_get_min(output.buffer, 2), ((_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 2)), halide_error_buffer_extents_negative("Output buffer output", 2, _halide_buffer_get_extent(output.buffer, 2)))
  assert((_halide_buffer_get_stride(input.buffer, 0) == 1), halide_error_constraint_violated("input.stride.0", _halide_buffer_get_stride(input.buffer, 0), "1", 1))
  assert((_halide_buffer_get_stride(output.buffer, 0) == 1), halide_error_constraint_violated("output.stride.0", _halide_buffer_get_stride(output.buffer, 0), "1", 1))
  assert((abs(int64(_halide_buffer_get_extent(input.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs(int64(_halide_buffer_get_extent(input.buffer, 0))), (uint64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_stride(input.buffer, 1)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_stride(input.buffer, 1)))), (uint64)2147483647))
  assert(((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0))) <= (int64)2147483647), halide_error_buffer_extents_too_large("input", (int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(input.buffer, 2))*int64(_halide_buffer_get_stride(input.buffer, 2)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(_halide_buffer_get_extent(input.buffer, 2))*int64(_halide_buffer_get_stride(input.buffer, 2)))), (uint64)2147483647))
  assert((((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0)))*int64(_halide_buffer_get_extent(input.buffer, 2))) <= (int64)2147483647), halide_error_buffer_extents_too_large("input", ((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0)))*int64(_halide_buffer_get_extent(input.buffer, 2))), (int64)2147483647))
  assert((abs(int64(_halide_buffer_get_extent(output.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs(int64(_halide_buffer_get_extent(output.buffer, 0))), (uint64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_stride(output.buffer, 1)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_stride(output.buffer, 1)))), (uint64)2147483647))
  assert(((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0))) <= (int64)2147483647), halide_error_buffer_extents_too_large("output", (int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(output.buffer, 2))*int64(_halide_buffer_get_stride(output.buffer, 2)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(_halide_buffer_get_extent(output.buffer, 2))*int64(_halide_buffer_get_stride(output.buffer, 2)))), (uint64)2147483647))
  assert((((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0)))*int64(_halide_buffer_get_extent(output.buffer, 2))) <= (int64)2147483647), halide_error_buffer_extents_too_large("output", ((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0)))*int64(_halide_buffer_get_extent(output.buffer, 2))), (int64)2147483647))
  assert((_halide_buffer_get_host(input.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer input"))
  assert((_halide_buffer_get_host(output.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Output buffer output"))
  halide_trace_helper("f12", make_struct((void *), ), make_struct((int32_t *), ), 3, 0, 0, 10, halide_trace_helper("hdr_plus", make_struct((void *), ), make_struct((int32_t *), ), 3, 0, 0, 8, 0, 0, 0, ""), 0, 0, "func_type_and_dim: 1 0 16 1 4 0 32 0 32 0 2 0 3")
  assert((uint1)0, halide_error_explicit_bounds_too_small("y", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + -1)))
  assert((uint1)0, halide_error_explicit_bounds_too_small("x", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + -1)))
  assert((uint1)0, halide_error_explicit_bounds_too_small("y", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + -1)))
  assert((uint1)0, halide_error_explicit_bounds_too_small("y", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + -1)))
  assert((uint1)0, halide_error_explicit_bounds_too_small("x", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + -1)))
  assert((uint1)0, halide_error_explicit_bounds_too_small("x", "hw_input", 0, 511, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + -1)))
  realize hw_input.stencil([0, 512], [0, 512], [0, 3]) {
    produce hw_input.stencil {
      let hw_input.s0.n.prologue.s = _halide_buffer_get_min(input.buffer, 2)
      let hw_input.s0.n.epilogue.s = (_halide_buffer_get_min(input.buffer, 2) + max(_halide_buffer_get_extent(input.buffer, 2), 0))
      let t6073 = max(min(hw_input.s0.n.prologue.s, 3), 0)
      for (hw_input.s0.n, 0, t6073) {
        for (hw_input.s0.y, 0, 512) {
          for (hw_input.s0.x, 0, 512) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*max(_halide_buffer_get_min(input.buffer, 1), min(((_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) + -1), hw_input.s0.y))) + ((_halide_buffer_get_stride(input.buffer, 2)*max(_halide_buffer_get_min(input.buffer, 2), min(((_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)) + -1), hw_input.s0.n))) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
        }
      }
      let t6076 = max(min(hw_input.s0.n.prologue.s, 3), 0)
      let t6075 = (max(min(hw_input.s0.n.epilogue.s, 3), 0) - t6076)
      for (hw_input.s0.n, t6076, t6075) {
        let hw_input.s0.y.prologue.s = _halide_buffer_get_min(input.buffer, 1)
        let hw_input.s0.y.epilogue.s = (_halide_buffer_get_min(input.buffer, 1) + max(_halide_buffer_get_extent(input.buffer, 1), 0))
        let t6077 = max(min(hw_input.s0.y.prologue.s, 512), 0)
        for (hw_input.s0.y, 0, t6077) {
          for (hw_input.s0.x, 0, 512) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*max(_halide_buffer_get_min(input.buffer, 1), min(((_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) + -1), hw_input.s0.y))) + ((_halide_buffer_get_stride(input.buffer, 2)*hw_input.s0.n) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
        }
        let t6080 = max(min(hw_input.s0.y.prologue.s, 512), 0)
        let t6079 = (max(min(hw_input.s0.y.epilogue.s, 512), 0) - t6080)
        for (hw_input.s0.y, t6080, t6079) {
          let hw_input.s0.x.prologue.s = _halide_buffer_get_min(input.buffer, 0)
          let hw_input.s0.x.epilogue.s = (_halide_buffer_get_min(input.buffer, 0) + max(_halide_buffer_get_extent(input.buffer, 0), 0))
          let t6081 = max(min(hw_input.s0.x.prologue.s, 512), 0)
          for (hw_input.s0.x, 0, t6081) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*hw_input.s0.y) + ((_halide_buffer_get_stride(input.buffer, 2)*hw_input.s0.n) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
          let t6084 = max(min(hw_input.s0.x.prologue.s, 512), 0)
          let t6083 = (max(min(hw_input.s0.x.epilogue.s, 512), 0) - t6084)
          for (hw_input.s0.x, t6084, t6083) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(((_halide_buffer_get_stride(input.buffer, 1)*hw_input.s0.y) + ((_halide_buffer_get_stride(input.buffer, 2)*hw_input.s0.n) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))) + hw_input.s0.x)]
          }
          let t6087 = max(min(hw_input.s0.x.epilogue.s, 512), 0)
          for (hw_input.s0.x, t6087, (512 - t6087)) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*hw_input.s0.y) + ((_halide_buffer_get_stride(input.buffer, 2)*hw_input.s0.n) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
        }
        let t6090 = max(min(hw_input.s0.y.epilogue.s, 512), 0)
        for (hw_input.s0.y, t6090, (512 - t6090)) {
          for (hw_input.s0.x, 0, 512) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*max(_halide_buffer_get_min(input.buffer, 1), min(((_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) + -1), hw_input.s0.y))) + ((_halide_buffer_get_stride(input.buffer, 2)*hw_input.s0.n) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
        }
      }
      let t6093 = max(min(hw_input.s0.n.epilogue.s, 3), 0)
      for (hw_input.s0.n, t6093, (3 - t6093)) {
        for (hw_input.s0.y, 0, 512) {
          for (hw_input.s0.x, 0, 512) {
            hw_input.stencil(hw_input.s0.x, hw_input.s0.y, hw_input.s0.n) = input[(max(_halide_buffer_get_min(input.buffer, 0), min(((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1), hw_input.s0.x)) + ((_halide_buffer_get_stride(input.buffer, 1)*max(_halide_buffer_get_min(input.buffer, 1), min(((_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) + -1), hw_input.s0.y))) + ((_halide_buffer_get_stride(input.buffer, 2)*max(_halide_buffer_get_min(input.buffer, 2), min(((_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)) + -1), hw_input.s0.n))) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))))]
          }
        }
      }
    }
    consume hw_input.stencil {
      realize provisional_output_global_wrapper.stencil([0, 512], [0, 512], [0, 3]) {
        produce provisional_output_global_wrapper.stencil {
          produce _hls_accelerator.provisional_output_global_wrapper {
            produce _hls_target.provisional_output_global_wrapper {
              realize hw_input_global_wrapper.glb.stencil([-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
                produce hw_input_global_wrapper.glb.stencil {
                  for (hw_input_global_wrapper.s0.n, 0, 3) {
                    for (hw_input_global_wrapper.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)) {
                      for (hw_input_global_wrapper.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)) {
                        hw_input_global_wrapper.glb.stencil(hw_input_global_wrapper.s0.x, hw_input_global_wrapper.s0.y, hw_input_global_wrapper.s0.n) = hw_input.stencil(hw_input_global_wrapper.s0.x, hw_input_global_wrapper.s0.y, hw_input_global_wrapper.s0.n)
                      }
                    }
                  }
                }
                consume hw_input_global_wrapper.glb.stencil {
                  realize provisional_output.glb.stencil([0, 512], [0, 512], [0, 3]) {
                    produce provisional_output.glb.stencil {
                      realize hw_input_global_wrapper_global_wrapper.stencil([-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
                        produce hw_input_global_wrapper_global_wrapper.stencil {
                          for (hw_input_global_wrapper_global_wrapper.s0.n, 0, 3) {
                            for (hw_input_global_wrapper_global_wrapper.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)) {
                              for (hw_input_global_wrapper_global_wrapper.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)) {
                                hw_input_global_wrapper_global_wrapper.stencil(hw_input_global_wrapper_global_wrapper.s0.x, hw_input_global_wrapper_global_wrapper.s0.y, hw_input_global_wrapper_global_wrapper.s0.n) = hw_input_global_wrapper.glb.stencil(hw_input_global_wrapper_global_wrapper.s0.x, hw_input_global_wrapper_global_wrapper.s0.y, hw_input_global_wrapper_global_wrapper.s0.n)
                              }
                            }
                          }
                        }
                        consume hw_input_global_wrapper_global_wrapper.stencil {
                          realize hw_input_copy.stencil([-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
                            produce hw_input_copy.stencil {
                              for (hw_input_copy.s0.n, 0, 3) {
                                for (hw_input_copy.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)*2), 33887) + 32768)) {
                                  for (hw_input_copy.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)*2), 34023) + 32768)) {
                                    hw_input_copy.stencil(hw_input_copy.s0.x, hw_input_copy.s0.y, hw_input_copy.s0.n) = hw_input_global_wrapper_global_wrapper.stencil(hw_input_copy.s0.x, hw_input_copy.s0.y, hw_input_copy.s0.n)
                                  }
                                }
                              }
                            }
                            consume hw_input_copy.stencil {
                              realize gray.stencil([0, max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)], [0, max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)], [0, 3]) {
                                produce gray.stencil {
                                  for (gray.s0.n, 0, 3) {
                                    for (gray.s0.y, 0, max(min((_halide_buffer_get_extent(input.buffer, 1)/2), 33327), 256)) {
                                      let t6096 = (gray.s0.y*2)
                                      for (gray.s0.x, 0, max(min((_halide_buffer_get_extent(input.buffer, 0)/2), 33395), 256)) {
                                        gray.stencil(gray.s0.x, gray.s0.y, gray.s0.n) = ((hw_input_copy.stencil(((gray.s0.x*2) + 1), t6096, gray.s0.n) + (hw_input_copy.stencil((gray.s0.x*2), t6096, gray.s0.n) + (hw_input_copy.stencil((gray.s0.x*2), (t6096 + 1), gray.s0.n) + hw_input_copy.stencil(((gray.s0.x*2) + 1), (t6096 + 1), gray.s0.n))))/(uint16)4)
                                      }
                                    }
                                  }
                                }
                                consume gray.stencil {
                                  realize f0.stencil([0, 256], [0, 256], [0, 3]) {
                                    produce f0.stencil {
                                      for (f0.s0.n, 0, 3) {
                                        for (f0.s0.y, 0, 256) {
                                          for (f0.s0.x, 0, 256) {
                                            f0.stencil(f0.s0.x, f0.s0.y, f0.s0.n) = gray.stencil(f0.s0.x, f0.s0.y, f0.s0.n)
                                          }
                                        }
                                      }
                                    }
                                    consume f0.stencil {
                                      realize f1.stencil([0, 128], [0, 128], [0, 3]) {
                                        produce f1.stencil {
                                          for (f1.s0.n, 0, 3) {
                                            for (f1.s0.y, 0, 128) {
                                              let t6101 = (f1.s0.y*2)
                                              let t6098 = max(t6101, 1)
                                              let t6097 = min(t6101, 253)
                                              for (f1.s0.x, 0, 128) {
                                                f1.stencil(f1.s0.x, f1.s0.y, f1.s0.n) = (((f0.stencil((max((f1.s0.x*2), 1) + -1), t6101, f1.s0.n)*(uint16)3) + (f0.stencil((max((f1.s0.x*2), 1) + -1), (t6098 + -1), f1.s0.n) + ((f0.stencil((max((f1.s0.x*2), 1) + -1), (t6101 + 1), f1.s0.n)*(uint16)3) + (f0.stencil((max((f1.s0.x*2), 1) + -1), (t6097 + 2), f1.s0.n) + ((f0.stencil((f1.s0.x*2), (t6098 + -1), f1.s0.n)*(uint16)3) + ((f0.stencil((f1.s0.x*2), t6101, f1.s0.n)*(uint16)9) + ((f0.stencil((f1.s0.x*2), (t6101 + 1), f1.s0.n)*(uint16)9) + ((f0.stencil((f1.s0.x*2), (t6097 + 2), f1.s0.n)*(uint16)3) + ((f0.stencil(((f1.s0.x*2) + 1), (t6098 + -1), f1.s0.n)*(uint16)3) + ((f0.stencil(((f1.s0.x*2) + 1), t6101, f1.s0.n)*(uint16)9) + ((f0.stencil(((f1.s0.x*2) + 1), (t6101 + 1), f1.s0.n)*(uint16)9) + ((f0.stencil(((f1.s0.x*2) + 1), (t6097 + 2), f1.s0.n)*(uint16)3) + (f0.stencil((min((f1.s0.x*2), 253) + 2), (t6098 + -1), f1.s0.n) + ((f0.stencil((min((f1.s0.x*2), 253) + 2), t6101, f1.s0.n)*(uint16)3) + (f0.stencil((min((f1.s0.x*2), 253) + 2), (t6097 + 2), f1.s0.n) + (f0.stencil((min((f1.s0.x*2), 253) + 2), (t6101 + 1), f1.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                              }
                                            }
                                          }
                                        }
                                        consume f1.stencil {
                                          realize f2.stencil([0, 64], [0, 64], [0, 3]) {
                                            produce f2.stencil {
                                              for (f2.s0.n, 0, 3) {
                                                for (f2.s0.y, 0, 64) {
                                                  let t6106 = (f2.s0.y*2)
                                                  let t6103 = max(t6106, 1)
                                                  let t6102 = min(t6106, 125)
                                                  for (f2.s0.x, 0, 64) {
                                                    f2.stencil(f2.s0.x, f2.s0.y, f2.s0.n) = (((f1.stencil((max((f2.s0.x*2), 1) + -1), t6106, f2.s0.n)*(uint16)3) + (f1.stencil((max((f2.s0.x*2), 1) + -1), (t6103 + -1), f2.s0.n) + ((f1.stencil((max((f2.s0.x*2), 1) + -1), (t6106 + 1), f2.s0.n)*(uint16)3) + (f1.stencil((max((f2.s0.x*2), 1) + -1), (t6102 + 2), f2.s0.n) + ((f1.stencil((f2.s0.x*2), (t6103 + -1), f2.s0.n)*(uint16)3) + ((f1.stencil((f2.s0.x*2), t6106, f2.s0.n)*(uint16)9) + ((f1.stencil((f2.s0.x*2), (t6106 + 1), f2.s0.n)*(uint16)9) + ((f1.stencil((f2.s0.x*2), (t6102 + 2), f2.s0.n)*(uint16)3) + ((f1.stencil(((f2.s0.x*2) + 1), (t6103 + -1), f2.s0.n)*(uint16)3) + ((f1.stencil(((f2.s0.x*2) + 1), t6106, f2.s0.n)*(uint16)9) + ((f1.stencil(((f2.s0.x*2) + 1), (t6106 + 1), f2.s0.n)*(uint16)9) + ((f1.stencil(((f2.s0.x*2) + 1), (t6102 + 2), f2.s0.n)*(uint16)3) + (f1.stencil((min((f2.s0.x*2), 125) + 2), (t6103 + -1), f2.s0.n) + ((f1.stencil((min((f2.s0.x*2), 125) + 2), t6106, f2.s0.n)*(uint16)3) + (f1.stencil((min((f2.s0.x*2), 125) + 2), (t6102 + 2), f2.s0.n) + (f1.stencil((min((f2.s0.x*2), 125) + 2), (t6106 + 1), f2.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                                  }
                                                }
                                              }
                                            }
                                            consume f2.stencil {
                                              realize f3.stencil([0, 32], [0, 32], [0, 3]) {
                                                produce f3.stencil {
                                                  for (f3.s0.n, 0, 3) {
                                                    for (f3.s0.y, 0, 32) {
                                                      let t6111 = (f3.s0.y*2)
                                                      let t6108 = max(t6111, 1)
                                                      let t6107 = min(t6111, 61)
                                                      for (f3.s0.x, 0, 32) {
                                                        f3.stencil(f3.s0.x, f3.s0.y, f3.s0.n) = (((f2.stencil((max((f3.s0.x*2), 1) + -1), t6111, f3.s0.n)*(uint16)3) + (f2.stencil((max((f3.s0.x*2), 1) + -1), (t6108 + -1), f3.s0.n) + ((f2.stencil((max((f3.s0.x*2), 1) + -1), (t6111 + 1), f3.s0.n)*(uint16)3) + (f2.stencil((max((f3.s0.x*2), 1) + -1), (t6107 + 2), f3.s0.n) + ((f2.stencil((f3.s0.x*2), (t6108 + -1), f3.s0.n)*(uint16)3) + ((f2.stencil((f3.s0.x*2), t6111, f3.s0.n)*(uint16)9) + ((f2.stencil((f3.s0.x*2), (t6111 + 1), f3.s0.n)*(uint16)9) + ((f2.stencil((f3.s0.x*2), (t6107 + 2), f3.s0.n)*(uint16)3) + ((f2.stencil(((f3.s0.x*2) + 1), (t6108 + -1), f3.s0.n)*(uint16)3) + ((f2.stencil(((f3.s0.x*2) + 1), t6111, f3.s0.n)*(uint16)9) + ((f2.stencil(((f3.s0.x*2) + 1), (t6111 + 1), f3.s0.n)*(uint16)9) + ((f2.stencil(((f3.s0.x*2) + 1), (t6107 + 2), f3.s0.n)*(uint16)3) + (f2.stencil((min((f3.s0.x*2), 61) + 2), (t6108 + -1), f3.s0.n) + ((f2.stencil((min((f3.s0.x*2), 61) + 2), t6111, f3.s0.n)*(uint16)3) + (f2.stencil((min((f3.s0.x*2), 61) + 2), (t6107 + 2), f3.s0.n) + (f2.stencil((min((f3.s0.x*2), 61) + 2), (t6111 + 1), f3.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                                      }
                                                    }
                                                  }
                                                }
                                                consume f3.stencil {
                                                  realize f4.stencil([0, 16], [0, 16], [0, 3]) {
                                                    produce f4.stencil {
                                                      for (f4.s0.n, 0, 3) {
                                                        for (f4.s0.y, 0, 16) {
                                                          let t6116 = (f4.s0.y*2)
                                                          let t6113 = max(t6116, 1)
                                                          let t6112 = min(t6116, 29)
                                                          for (f4.s0.x, 0, 16) {
                                                            f4.stencil(f4.s0.x, f4.s0.y, f4.s0.n) = (((f3.stencil((max((f4.s0.x*2), 1) + -1), t6116, f4.s0.n)*(uint16)3) + (f3.stencil((max((f4.s0.x*2), 1) + -1), (t6113 + -1), f4.s0.n) + ((f3.stencil((max((f4.s0.x*2), 1) + -1), (t6116 + 1), f4.s0.n)*(uint16)3) + (f3.stencil((max((f4.s0.x*2), 1) + -1), (t6112 + 2), f4.s0.n) + ((f3.stencil((f4.s0.x*2), (t6113 + -1), f4.s0.n)*(uint16)3) + ((f3.stencil((f4.s0.x*2), t6116, f4.s0.n)*(uint16)9) + ((f3.stencil((f4.s0.x*2), (t6116 + 1), f4.s0.n)*(uint16)9) + ((f3.stencil((f4.s0.x*2), (t6112 + 2), f4.s0.n)*(uint16)3) + ((f3.stencil(((f4.s0.x*2) + 1), (t6113 + -1), f4.s0.n)*(uint16)3) + ((f3.stencil(((f4.s0.x*2) + 1), t6116, f4.s0.n)*(uint16)9) + ((f3.stencil(((f4.s0.x*2) + 1), (t6116 + 1), f4.s0.n)*(uint16)9) + ((f3.stencil(((f4.s0.x*2) + 1), (t6112 + 2), f4.s0.n)*(uint16)3) + (f3.stencil((min((f4.s0.x*2), 29) + 2), (t6113 + -1), f4.s0.n) + ((f3.stencil((min((f4.s0.x*2), 29) + 2), t6116, f4.s0.n)*(uint16)3) + (f3.stencil((min((f4.s0.x*2), 29) + 2), (t6112 + 2), f4.s0.n) + (f3.stencil((min((f4.s0.x*2), 29) + 2), (t6116 + 1), f4.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                                          }
                                                        }
                                                      }
                                                    }
                                                    consume f4.stencil {
                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f13", 0, 0, 0, 1))
                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f13", 0, 0, 0, 1))
                                                      realize f13.stencil([0, 1], [0, 1], [0, 1], [0, 3]) {
                                                        produce f13.stencil {
                                                          for (f13.s0.n, 0, 3) {
                                                            realize min_y_lvl_4.stencil([0, 16], [0, 16], [0, 3]) if (uint1)0 {
                                                              consume min_y_lvl_4.stencil {
                                                                realize min_x_lvl_4.stencil([0, 16], [0, 16], [0, 3]) {
                                                                  produce min_x_lvl_4.stencil {
                                                                    if ((f13.s0.n != 0)) {
                                                                      for (min_x_lvl_4.s0.n, 0, 3) {
                                                                        for (min_x_lvl_4.s0.ty, 0, 16) {
                                                                          for (min_x_lvl_4.s0.tx, 0, 16) {
                                                                            min_x_lvl_4.stencil(min_x_lvl_4.s0.tx, min_x_lvl_4.s0.ty, min_x_lvl_4.s0.n) = 0
                                                                          }
                                                                        }
                                                                      }
                                                                      for (min_x_lvl_4.s1.n, 0, 3) {
                                                                        for (min_x_lvl_4.s1.ty, 0, 16) {
                                                                          for (min_x_lvl_4.s1.tx, 0, 16) {
                                                                            for (min_x_lvl_4.s1.r_search_lvl_4$y, -4, 9) {
                                                                              for (min_x_lvl_4.s1.r_search_lvl_4$x, -4, 9) {
                                                                                realize min_val_lvl_4.stencil([0, 16], [0, 16], [0, 3]) {
                                                                                  produce min_val_lvl_4.stencil {
                                                                                    for (min_val_lvl_4.s0.n, 0, 3) {
                                                                                      for (min_val_lvl_4.s0.ty, 0, 16) {
                                                                                        for (min_val_lvl_4.s0.tx, 0, 16) {
                                                                                          min_val_lvl_4.stencil(min_val_lvl_4.s0.tx, min_val_lvl_4.s0.ty, min_val_lvl_4.s0.n) = (uint32)2147483647
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    for (min_val_lvl_4.s1.n, 0, 3) {
                                                                                      for (min_val_lvl_4.s1.ty, 0, 16) {
                                                                                        for (min_val_lvl_4.s1.tx, 0, 16) {
                                                                                          for (min_val_lvl_4.s1.r_search_lvl_4$y, -4, 9) {
                                                                                            let t6123 = (min_val_lvl_4.s1.ty*16)
                                                                                            for (min_val_lvl_4.s1.r_search_lvl_4$x, -4, 9) {
                                                                                              realize sum.stencil([min_val_lvl_4.s1.tx, 1], [min_val_lvl_4.s1.ty, 1], [min_val_lvl_4.s1.r_search_lvl_4$x, 1], [min_val_lvl_4.s1.r_search_lvl_4$y, 1], [min_val_lvl_4.s1.n, 1]) {
                                                                                                produce sum.stencil {
                                                                                                  sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) = (uint32)0
                                                                                                  let t6127 = (min_val_lvl_4.s1.tx*16)
                                                                                                  for (sum.s1.r_tile_lvl_4$y, 0, 16) {
                                                                                                    let t6130 = max(min(((min_val_lvl_4.s1.r_search_lvl_4$y + t6123) + sum.s1.r_tile_lvl_4$y), 15), 0)
                                                                                                    let t6128 = min((sum.s1.r_tile_lvl_4$y + t6123), 15)
                                                                                                    for (sum.s1.r_tile_lvl_4$x, 0, 16) {
                                                                                                      sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) = (sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) + uint32(abs((int16(f4.stencil(min((sum.s1.r_tile_lvl_4$x + t6127), 15), t6128, 0)) - int16(f4.stencil(max(min(((min_val_lvl_4.s1.r_search_lvl_4$x + t6127) + sum.s1.r_tile_lvl_4$x), 15), 0), t6130, min_val_lvl_4.s1.n))))))
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                                consume sum.stencil {
                                                                                                  min_val_lvl_4.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.n) = min(sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n), min_val_lvl_4.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.n))
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  consume min_val_lvl_4.stencil {
                                                                                    realize sum.stencil([0, 16], [0, 16], [-4, 9], [-4, 9], [0, 3]) {
                                                                                      produce sum.stencil {
                                                                                        for (sum.s0.n, 0, 3) {
                                                                                          for (sum.s0.y_s_lvl_4, -4, 9) {
                                                                                            for (sum.s0.x_s_lvl_4, -4, 9) {
                                                                                              for (sum.s0.ty, 0, 16) {
                                                                                                for (sum.s0.tx, 0, 16) {
                                                                                                  sum.stencil(sum.s0.tx, sum.s0.ty, sum.s0.x_s_lvl_4, sum.s0.y_s_lvl_4, sum.s0.n) = (uint32)0
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        for (sum.s1.n, 0, 3) {
                                                                                          for (sum.s1.y_s_lvl_4, -4, 9) {
                                                                                            for (sum.s1.x_s_lvl_4, -4, 9) {
                                                                                              for (sum.s1.ty, 0, 16) {
                                                                                                let t6133 = (sum.s1.ty*16)
                                                                                                for (sum.s1.tx, 0, 16) {
                                                                                                  let t6137 = (sum.s1.tx*16)
                                                                                                  for (sum.s1.r_tile_lvl_4$y, 0, 16) {
                                                                                                    let t6140 = max(min(((sum.s1.y_s_lvl_4 + t6133) + sum.s1.r_tile_lvl_4$y), 15), 0)
                                                                                                    let t6138 = min((sum.s1.r_tile_lvl_4$y + t6133), 15)
                                                                                                    for (sum.s1.r_tile_lvl_4$x, 0, 16) {
                                                                                                      sum.stencil(sum.s1.tx, sum.s1.ty, sum.s1.x_s_lvl_4, sum.s1.y_s_lvl_4, sum.s1.n) = (sum.stencil(sum.s1.tx, sum.s1.ty, sum.s1.x_s_lvl_4, sum.s1.y_s_lvl_4, sum.s1.n) + uint32(abs((int16(f4.stencil(min((sum.s1.r_tile_lvl_4$x + t6137), 15), t6138, 0)) - int16(f4.stencil(max(min(((sum.s1.x_s_lvl_4 + t6137) + sum.s1.r_tile_lvl_4$x), 15), 0), t6140, sum.s1.n))))))
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      consume sum.stencil {
                                                                                        min_x_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n) = select((sum.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.r_search_lvl_4$x, min_x_lvl_4.s1.r_search_lvl_4$y, min_x_lvl_4.s1.n) < min_val_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n)), min_x_lvl_4.s1.r_search_lvl_4$x, min_x_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n))
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  consume min_x_lvl_4.stencil {
                                                                    f13.stencil(0, 0, 0, f13.s0.n) = select((f13.s0.n == 0), (int16)0, int16(min_x_lvl_4.stencil(0, 0, f13.s0.n)))
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        consume f13.stencil {
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f12", 0, 0, 0, 1))
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f12", 0, 1, 0, 31))
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f12", 0, 1, 0, 31))
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f12", 0, 0, 0, 1))
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f12", 0, 1, 0, 31))
                                                          assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f12", 0, 1, 0, 31))
                                                          realize f12.stencil([0, 2], [0, 2], [0, 1], [0, 3]) {
                                                            produce f12.stencil {
                                                              for (f12.s0.n, 0, 3) {
                                                                let t6141 = (f12.s0.n != 0)
                                                                let t6142 = (f12.s0.n == 0)
                                                                for (f12.s0.ty, 0, 2) {
                                                                  let t6143 = (f12.s0.ty/2)
                                                                  for (f12.s0.tx, 0, 2) {
                                                                    realize min_y_lvl_3.stencil([0, 32], [0, 32], [0, 3]) if (uint1)0 {
                                                                      consume min_y_lvl_3.stencil {
                                                                        realize min_x_lvl_3.stencil([0, 32], [0, 32], [0, 3]) {
                                                                          produce min_x_lvl_3.stencil {
                                                                            if (t6141) {
                                                                              for (min_x_lvl_3.s0.n, 0, 3) {
                                                                                for (min_x_lvl_3.s0.ty, 0, 32) {
                                                                                  for (min_x_lvl_3.s0.tx, 0, 32) {
                                                                                    min_x_lvl_3.stencil(min_x_lvl_3.s0.tx, min_x_lvl_3.s0.ty, min_x_lvl_3.s0.n) = 0
                                                                                  }
                                                                                }
                                                                              }
                                                                              for (min_x_lvl_3.s1.n, 0, 3) {
                                                                                for (min_x_lvl_3.s1.ty, 0, 32) {
                                                                                  for (min_x_lvl_3.s1.tx, 0, 32) {
                                                                                    for (min_x_lvl_3.s1.r_search_lvl_3$y, -4, 9) {
                                                                                      for (min_x_lvl_3.s1.r_search_lvl_3$x, -4, 9) {
                                                                                        realize min_val_lvl_3.stencil([0, 32], [0, 32], [0, 3]) {
                                                                                          produce min_val_lvl_3.stencil {
                                                                                            for (min_val_lvl_3.s0.n, 0, 3) {
                                                                                              for (min_val_lvl_3.s0.ty, 0, 32) {
                                                                                                for (min_val_lvl_3.s0.tx, 0, 32) {
                                                                                                  min_val_lvl_3.stencil(min_val_lvl_3.s0.tx, min_val_lvl_3.s0.ty, min_val_lvl_3.s0.n) = (uint32)2147483647
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                            for (min_val_lvl_3.s1.n, 0, 3) {
                                                                                              for (min_val_lvl_3.s1.ty, 0, 32) {
                                                                                                for (min_val_lvl_3.s1.tx, 0, 32) {
                                                                                                  for (min_val_lvl_3.s1.r_search_lvl_3$y, -4, 9) {
                                                                                                    let t6150 = (min_val_lvl_3.s1.ty*16)
                                                                                                    for (min_val_lvl_3.s1.r_search_lvl_3$x, -4, 9) {
                                                                                                      realize sum$1.stencil([min_val_lvl_3.s1.tx, 1], [min_val_lvl_3.s1.ty, 1], [min_val_lvl_3.s1.r_search_lvl_3$x, 1], [min_val_lvl_3.s1.r_search_lvl_3$y, 1], [min_val_lvl_3.s1.n, 1]) {
                                                                                                        produce sum$1.stencil {
                                                                                                          sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) = (uint32)0
                                                                                                          let t6154 = (min_val_lvl_3.s1.tx*16)
                                                                                                          for (sum$1.s1.r_tile_lvl_3$y, 0, 16) {
                                                                                                            let t6157 = max(min(((min_val_lvl_3.s1.r_search_lvl_3$y + t6150) + sum$1.s1.r_tile_lvl_3$y), 31), 0)
                                                                                                            let t6155 = min((sum$1.s1.r_tile_lvl_3$y + t6150), 31)
                                                                                                            for (sum$1.s1.r_tile_lvl_3$x, 0, 16) {
                                                                                                              sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) = (sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) + uint32(abs((int16(f3.stencil(min((sum$1.s1.r_tile_lvl_3$x + t6154), 31), t6155, 0)) - int16(f3.stencil(max(min(((min_val_lvl_3.s1.r_search_lvl_3$x + t6154) + sum$1.s1.r_tile_lvl_3$x), 31), 0), t6157, min_val_lvl_3.s1.n))))))
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                        consume sum$1.stencil {
                                                                                                          min_val_lvl_3.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.n) = min(sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n), min_val_lvl_3.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.n))
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          consume min_val_lvl_3.stencil {
                                                                                            realize sum$1.stencil([0, 32], [0, 32], [-4, 9], [-4, 9], [0, 3]) {
                                                                                              produce sum$1.stencil {
                                                                                                for (sum$1.s0.n, 0, 3) {
                                                                                                  for (sum$1.s0.y_s_lvl_3, -4, 9) {
                                                                                                    for (sum$1.s0.x_s_lvl_3, -4, 9) {
                                                                                                      for (sum$1.s0.ty, 0, 32) {
                                                                                                        for (sum$1.s0.tx, 0, 32) {
                                                                                                          sum$1.stencil(sum$1.s0.tx, sum$1.s0.ty, sum$1.s0.x_s_lvl_3, sum$1.s0.y_s_lvl_3, sum$1.s0.n) = (uint32)0
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                                for (sum$1.s1.n, 0, 3) {
                                                                                                  for (sum$1.s1.y_s_lvl_3, -4, 9) {
                                                                                                    for (sum$1.s1.x_s_lvl_3, -4, 9) {
                                                                                                      for (sum$1.s1.ty, 0, 32) {
                                                                                                        let t6160 = (sum$1.s1.ty*16)
                                                                                                        for (sum$1.s1.tx, 0, 32) {
                                                                                                          let t6164 = (sum$1.s1.tx*16)
                                                                                                          for (sum$1.s1.r_tile_lvl_3$y, 0, 16) {
                                                                                                            let t6167 = max(min(((sum$1.s1.y_s_lvl_3 + t6160) + sum$1.s1.r_tile_lvl_3$y), 31), 0)
                                                                                                            let t6165 = min((sum$1.s1.r_tile_lvl_3$y + t6160), 31)
                                                                                                            for (sum$1.s1.r_tile_lvl_3$x, 0, 16) {
                                                                                                              sum$1.stencil(sum$1.s1.tx, sum$1.s1.ty, sum$1.s1.x_s_lvl_3, sum$1.s1.y_s_lvl_3, sum$1.s1.n) = (sum$1.stencil(sum$1.s1.tx, sum$1.s1.ty, sum$1.s1.x_s_lvl_3, sum$1.s1.y_s_lvl_3, sum$1.s1.n) + uint32(abs((int16(f3.stencil(min((sum$1.s1.r_tile_lvl_3$x + t6164), 31), t6165, 0)) - int16(f3.stencil(max(min(((sum$1.s1.x_s_lvl_3 + t6164) + sum$1.s1.r_tile_lvl_3$x), 31), 0), t6167, sum$1.s1.n))))))
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              consume sum$1.stencil {
                                                                                                min_x_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n) = select((sum$1.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.r_search_lvl_3$x, min_x_lvl_3.s1.r_search_lvl_3$y, min_x_lvl_3.s1.n) < min_val_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n)), min_x_lvl_3.s1.r_search_lvl_3$x, min_x_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          consume min_x_lvl_3.stencil {
                                                                            f12.stencil(f12.s0.tx, f12.s0.ty, 0, f12.s0.n) = (let t6006 = select(t6142, (int16)0, ((f13.stencil((f12.s0.tx/2), t6143, 0, f12.s0.n)*(int16)2) + int16(min_x_lvl_3.stencil(f12.s0.tx, f12.s0.ty, f12.s0.n)))) in return_second(halide_trace_helper("f12", make_struct((void *), t6006), make_struct((int32_t *), f12.s0.tx, f12.s0.ty, 0, f12.s0.n), 0, 16, 1, 1, 0, 0, 4, ""), t6006))
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            consume f12.stencil {
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f11", 0, 0, 0, 1))
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f11", 0, 3, 0, 63))
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f11", 0, 3, 0, 63))
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f11", 0, 0, 0, 1))
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f11", 0, 3, 0, 63))
                                                              assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f11", 0, 3, 0, 63))
                                                              realize f11.stencil([0, 4], [0, 4], [0, 1], [0, 3]) {
                                                                produce f11.stencil {
                                                                  for (f11.s0.n, 0, 3) {
                                                                    let t6168 = (f11.s0.n != 0)
                                                                    let t6169 = (f11.s0.n == 0)
                                                                    for (f11.s0.ty, 0, 4) {
                                                                      let t6170 = (f11.s0.ty/2)
                                                                      for (f11.s0.tx, 0, 4) {
                                                                        realize min_y_lvl_2.stencil([0, 64], [0, 64], [0, 3]) if (uint1)0 {
                                                                          consume min_y_lvl_2.stencil {
                                                                            realize min_x_lvl_2.stencil([0, 64], [0, 64], [0, 3]) {
                                                                              produce min_x_lvl_2.stencil {
                                                                                if (t6168) {
                                                                                  for (min_x_lvl_2.s0.n, 0, 3) {
                                                                                    for (min_x_lvl_2.s0.ty, 0, 64) {
                                                                                      for (min_x_lvl_2.s0.tx, 0, 64) {
                                                                                        min_x_lvl_2.stencil(min_x_lvl_2.s0.tx, min_x_lvl_2.s0.ty, min_x_lvl_2.s0.n) = 0
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  for (min_x_lvl_2.s1.n, 0, 3) {
                                                                                    for (min_x_lvl_2.s1.ty, 0, 64) {
                                                                                      for (min_x_lvl_2.s1.tx, 0, 64) {
                                                                                        for (min_x_lvl_2.s1.r_search_lvl_2$y, -4, 9) {
                                                                                          for (min_x_lvl_2.s1.r_search_lvl_2$x, -4, 9) {
                                                                                            realize min_val_lvl_2.stencil([0, 64], [0, 64], [0, 3]) {
                                                                                              produce min_val_lvl_2.stencil {
                                                                                                for (min_val_lvl_2.s0.n, 0, 3) {
                                                                                                  for (min_val_lvl_2.s0.ty, 0, 64) {
                                                                                                    for (min_val_lvl_2.s0.tx, 0, 64) {
                                                                                                      min_val_lvl_2.stencil(min_val_lvl_2.s0.tx, min_val_lvl_2.s0.ty, min_val_lvl_2.s0.n) = (uint32)2147483647
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                                for (min_val_lvl_2.s1.n, 0, 3) {
                                                                                                  for (min_val_lvl_2.s1.ty, 0, 64) {
                                                                                                    let t6172 = (min_val_lvl_2.s1.ty/2)
                                                                                                    for (min_val_lvl_2.s1.tx, 0, 64) {
                                                                                                      let t6175 = (min_val_lvl_2.s1.tx/2)
                                                                                                      for (min_val_lvl_2.s1.r_search_lvl_2$y, -4, 9) {
                                                                                                        for (min_val_lvl_2.s1.r_search_lvl_2$x, -4, 9) {
                                                                                                          realize sum$2.stencil([min_val_lvl_2.s1.tx, 1], [min_val_lvl_2.s1.ty, 1], [min_val_lvl_2.s1.n, 1], [min_val_lvl_2.s1.r_search_lvl_2$x, 1], [min_val_lvl_2.s1.r_search_lvl_2$y, 1]) {
                                                                                                            produce sum$2.stencil {
                                                                                                              sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) = (uint32)0
                                                                                                              for (sum$2.s1.r_tile_lvl_2$y, 0, 16) {
                                                                                                                let t6183 = (min_val_lvl_2.s1.ty*16)
                                                                                                                let t6181 = min((sum$2.s1.r_tile_lvl_2$y + t6183), 63)
                                                                                                                for (sum$2.s1.r_tile_lvl_2$x, 0, 16) {
                                                                                                                  sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) = (sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) + uint32(abs((int16(f2.stencil(min(((min_val_lvl_2.s1.tx*16) + sum$2.s1.r_tile_lvl_2$x), 63), t6181, 0)) - int16(f2.stencil(max(min(((((min_val_lvl_2.s1.tx*16) + int32((f12.stencil(t6175, t6172, 0, min_val_lvl_2.s1.n)*(int16)2))) + min_val_lvl_2.s1.r_search_lvl_2$x) + sum$2.s1.r_tile_lvl_2$x), 63), 0), max(min((((t6183 + int32((f12.stencil(t6175, t6172, 1, min_val_lvl_2.s1.n)*(int16)2))) + min_val_lvl_2.s1.r_search_lvl_2$y) + sum$2.s1.r_tile_lvl_2$y), 63), 0), min_val_lvl_2.s1.n))))))
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                            consume sum$2.stencil {
                                                                                                              min_val_lvl_2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n) = min(sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y), min_val_lvl_2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n))
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              consume min_val_lvl_2.stencil {
                                                                                                realize sum$2.stencil([0, 64], [0, 64], [0, 3], [-4, 9], [-4, 9]) {
                                                                                                  produce sum$2.stencil {
                                                                                                    for (sum$2.s0.y_s_lvl_2, -4, 9) {
                                                                                                      for (sum$2.s0.x_s_lvl_2, -4, 9) {
                                                                                                        for (sum$2.s0.n, 0, 3) {
                                                                                                          for (sum$2.s0.ty, 0, 64) {
                                                                                                            for (sum$2.s0.tx, 0, 64) {
                                                                                                              sum$2.stencil(sum$2.s0.tx, sum$2.s0.ty, sum$2.s0.n, sum$2.s0.x_s_lvl_2, sum$2.s0.y_s_lvl_2) = (uint32)0
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                    for (sum$2.s1.y_s_lvl_2, -4, 9) {
                                                                                                      for (sum$2.s1.x_s_lvl_2, -4, 9) {
                                                                                                        for (sum$2.s1.n, 0, 3) {
                                                                                                          for (sum$2.s1.ty, 0, 64) {
                                                                                                            let t6187 = (sum$2.s1.ty*16)
                                                                                                            let t6185 = (sum$2.s1.ty/2)
                                                                                                            for (sum$2.s1.tx, 0, 64) {
                                                                                                              let t6192 = (sum$2.s1.tx*16)
                                                                                                              let t6190 = (sum$2.s1.tx/2)
                                                                                                              for (sum$2.s1.r_tile_lvl_2$y, 0, 16) {
                                                                                                                let t6193 = min((sum$2.s1.r_tile_lvl_2$y + t6187), 63)
                                                                                                                let t6195 = (sum$2.s1.y_s_lvl_2 + t6187)
                                                                                                                for (sum$2.s1.r_tile_lvl_2$x, 0, 16) {
                                                                                                                  sum$2.stencil(sum$2.s1.tx, sum$2.s1.ty, sum$2.s1.n, sum$2.s1.x_s_lvl_2, sum$2.s1.y_s_lvl_2) = (sum$2.stencil(sum$2.s1.tx, sum$2.s1.ty, sum$2.s1.n, sum$2.s1.x_s_lvl_2, sum$2.s1.y_s_lvl_2) + uint32(abs((int16(f2.stencil(min((sum$2.s1.r_tile_lvl_2$x + t6192), 63), t6193, 0)) - int16(f2.stencil(max(min((((sum$2.s1.x_s_lvl_2 + t6192) + int32((f12.stencil(t6190, t6185, 0, sum$2.s1.n)*(int16)2))) + sum$2.s1.r_tile_lvl_2$x), 63), 0), max(min(((t6195 + int32((f12.stencil(t6190, t6185, 1, sum$2.s1.n)*(int16)2))) + sum$2.s1.r_tile_lvl_2$y), 63), 0), sum$2.s1.n))))))
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                  consume sum$2.stencil {
                                                                                                    min_x_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n) = select((sum$2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n, min_x_lvl_2.s1.r_search_lvl_2$x, min_x_lvl_2.s1.r_search_lvl_2$y) < min_val_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n)), min_x_lvl_2.s1.r_search_lvl_2$x, min_x_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n))
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                              consume min_x_lvl_2.stencil {
                                                                                f11.stencil(f11.s0.tx, f11.s0.ty, 0, f11.s0.n) = select(t6169, (int16)0, ((f12.stencil((f11.s0.tx/2), t6170, 0, f11.s0.n)*(int16)2) + int16(min_x_lvl_2.stencil(f11.s0.tx, f11.s0.ty, f11.s0.n))))
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                consume f11.stencil {
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f10", 0, 0, 0, 1))
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f10", 0, 7, 0, 127))
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f10", 0, 7, 0, 127))
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f10", 0, 0, 0, 1))
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f10", 0, 7, 0, 127))
                                                                  assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f10", 0, 7, 0, 127))
                                                                  realize f10.stencil([0, 8], [0, 8], [0, 1], [0, 3]) {
                                                                    produce f10.stencil {
                                                                      for (f10.s0.n, 0, 3) {
                                                                        let t6196 = (f10.s0.n != 0)
                                                                        let t6197 = (f10.s0.n == 0)
                                                                        for (f10.s0.ty, 0, 8) {
                                                                          let t6198 = (f10.s0.ty/2)
                                                                          for (f10.s0.tx, 0, 8) {
                                                                            realize min_y_lvl_1.stencil([0, 128], [0, 128], [0, 3]) if (uint1)0 {
                                                                              consume min_y_lvl_1.stencil {
                                                                                realize min_x_lvl_1.stencil([0, 128], [0, 128], [0, 3]) {
                                                                                  produce min_x_lvl_1.stencil {
                                                                                    if (t6196) {
                                                                                      for (min_x_lvl_1.s0.n, 0, 3) {
                                                                                        for (min_x_lvl_1.s0.ty, 0, 128) {
                                                                                          for (min_x_lvl_1.s0.tx, 0, 128) {
                                                                                            min_x_lvl_1.stencil(min_x_lvl_1.s0.tx, min_x_lvl_1.s0.ty, min_x_lvl_1.s0.n) = 0
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      for (min_x_lvl_1.s1.n, 0, 3) {
                                                                                        for (min_x_lvl_1.s1.ty, 0, 128) {
                                                                                          for (min_x_lvl_1.s1.tx, 0, 128) {
                                                                                            for (min_x_lvl_1.s1.r_search_lvl_1$y, -4, 9) {
                                                                                              for (min_x_lvl_1.s1.r_search_lvl_1$x, -4, 9) {
                                                                                                realize min_val_lvl_1.stencil([0, 128], [0, 128], [0, 3]) {
                                                                                                  produce min_val_lvl_1.stencil {
                                                                                                    for (min_val_lvl_1.s0.n, 0, 3) {
                                                                                                      for (min_val_lvl_1.s0.ty, 0, 128) {
                                                                                                        for (min_val_lvl_1.s0.tx, 0, 128) {
                                                                                                          min_val_lvl_1.stencil(min_val_lvl_1.s0.tx, min_val_lvl_1.s0.ty, min_val_lvl_1.s0.n) = (uint32)2147483647
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                    for (min_val_lvl_1.s1.n, 0, 3) {
                                                                                                      for (min_val_lvl_1.s1.ty, 0, 128) {
                                                                                                        let t6200 = (min_val_lvl_1.s1.ty/2)
                                                                                                        for (min_val_lvl_1.s1.tx, 0, 128) {
                                                                                                          let t6203 = (min_val_lvl_1.s1.tx/2)
                                                                                                          for (min_val_lvl_1.s1.r_search_lvl_1$y, -4, 9) {
                                                                                                            for (min_val_lvl_1.s1.r_search_lvl_1$x, -4, 9) {
                                                                                                              realize sum$3.stencil([min_val_lvl_1.s1.tx, 1], [min_val_lvl_1.s1.ty, 1], [min_val_lvl_1.s1.n, 1], [min_val_lvl_1.s1.r_search_lvl_1$x, 1], [min_val_lvl_1.s1.r_search_lvl_1$y, 1]) {
                                                                                                                produce sum$3.stencil {
                                                                                                                  sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) = (uint32)0
                                                                                                                  for (sum$3.s1.r_tile_lvl_1$y, 0, 16) {
                                                                                                                    let t6211 = (min_val_lvl_1.s1.ty*16)
                                                                                                                    let t6209 = min((sum$3.s1.r_tile_lvl_1$y + t6211), 127)
                                                                                                                    for (sum$3.s1.r_tile_lvl_1$x, 0, 16) {
                                                                                                                      sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) = (sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) + uint32(abs((int16(f1.stencil(min(((min_val_lvl_1.s1.tx*16) + sum$3.s1.r_tile_lvl_1$x), 127), t6209, 0)) - int16(f1.stencil(max(min(((((min_val_lvl_1.s1.tx*16) + int32((f11.stencil(t6203, t6200, 0, min_val_lvl_1.s1.n)*(int16)2))) + min_val_lvl_1.s1.r_search_lvl_1$x) + sum$3.s1.r_tile_lvl_1$x), 127), 0), max(min((((t6211 + int32((f11.stencil(t6203, t6200, 1, min_val_lvl_1.s1.n)*(int16)2))) + min_val_lvl_1.s1.r_search_lvl_1$y) + sum$3.s1.r_tile_lvl_1$y), 127), 0), min_val_lvl_1.s1.n))))))
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                                consume sum$3.stencil {
                                                                                                                  min_val_lvl_1.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n) = min(sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y), min_val_lvl_1.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n))
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                  consume min_val_lvl_1.stencil {
                                                                                                    realize sum$3.stencil([0, 128], [0, 128], [0, 3], [-4, 9], [-4, 9]) {
                                                                                                      produce sum$3.stencil {
                                                                                                        for (sum$3.s0.y_s_lvl_1, -4, 9) {
                                                                                                          for (sum$3.s0.x_s_lvl_1, -4, 9) {
                                                                                                            for (sum$3.s0.n, 0, 3) {
                                                                                                              for (sum$3.s0.ty, 0, 128) {
                                                                                                                for (sum$3.s0.tx, 0, 128) {
                                                                                                                  sum$3.stencil(sum$3.s0.tx, sum$3.s0.ty, sum$3.s0.n, sum$3.s0.x_s_lvl_1, sum$3.s0.y_s_lvl_1) = (uint32)0
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                        for (sum$3.s1.y_s_lvl_1, -4, 9) {
                                                                                                          for (sum$3.s1.x_s_lvl_1, -4, 9) {
                                                                                                            for (sum$3.s1.n, 0, 3) {
                                                                                                              for (sum$3.s1.ty, 0, 128) {
                                                                                                                let t6215 = (sum$3.s1.ty*16)
                                                                                                                let t6213 = (sum$3.s1.ty/2)
                                                                                                                for (sum$3.s1.tx, 0, 128) {
                                                                                                                  let t6220 = (sum$3.s1.tx*16)
                                                                                                                  let t6218 = (sum$3.s1.tx/2)
                                                                                                                  for (sum$3.s1.r_tile_lvl_1$y, 0, 16) {
                                                                                                                    let t6221 = min((sum$3.s1.r_tile_lvl_1$y + t6215), 127)
                                                                                                                    let t6223 = (sum$3.s1.y_s_lvl_1 + t6215)
                                                                                                                    for (sum$3.s1.r_tile_lvl_1$x, 0, 16) {
                                                                                                                      sum$3.stencil(sum$3.s1.tx, sum$3.s1.ty, sum$3.s1.n, sum$3.s1.x_s_lvl_1, sum$3.s1.y_s_lvl_1) = (sum$3.stencil(sum$3.s1.tx, sum$3.s1.ty, sum$3.s1.n, sum$3.s1.x_s_lvl_1, sum$3.s1.y_s_lvl_1) + uint32(abs((int16(f1.stencil(min((sum$3.s1.r_tile_lvl_1$x + t6220), 127), t6221, 0)) - int16(f1.stencil(max(min((((sum$3.s1.x_s_lvl_1 + t6220) + int32((f11.stencil(t6218, t6213, 0, sum$3.s1.n)*(int16)2))) + sum$3.s1.r_tile_lvl_1$x), 127), 0), max(min(((t6223 + int32((f11.stencil(t6218, t6213, 1, sum$3.s1.n)*(int16)2))) + sum$3.s1.r_tile_lvl_1$y), 127), 0), sum$3.s1.n))))))
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                      consume sum$3.stencil {
                                                                                                        min_x_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n) = select((sum$3.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n, min_x_lvl_1.s1.r_search_lvl_1$x, min_x_lvl_1.s1.r_search_lvl_1$y) < min_val_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n)), min_x_lvl_1.s1.r_search_lvl_1$x, min_x_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n))
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  consume min_x_lvl_1.stencil {
                                                                                    f10.stencil(f10.s0.tx, f10.s0.ty, 0, f10.s0.n) = select(t6197, (int16)0, ((f11.stencil((f10.s0.tx/2), t6198, 0, f10.s0.n)*(int16)2) + int16(min_x_lvl_1.stencil(f10.s0.tx, f10.s0.ty, f10.s0.n))))
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    consume f10.stencil {
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f9", 0, 0, 0, 1))
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f9", 0, 15, 0, 34))
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f9", 0, 15, 0, 38))
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f9", 0, 0, 0, 1))
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f9", 0, 15, 0, 34))
                                                                      assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f9", 0, 15, 0, 38))
                                                                      realize f9.stencil([0, 16], [0, 16], [0, 1], [0, 3]) {
                                                                        produce f9.stencil {
                                                                          for (f9.s0.n, 0, 3) {
                                                                            let t6224 = (f9.s0.n != 0)
                                                                            let t6225 = (f9.s0.n == 0)
                                                                            for (f9.s0.ty, 0, 16) {
                                                                              let t6226 = (f9.s0.ty/2)
                                                                              for (f9.s0.tx, 0, 16) {
                                                                                realize min_y_lvl_0.stencil([0, 256], [0, 256], [0, 3]) if (uint1)0 {
                                                                                  consume min_y_lvl_0.stencil {
                                                                                    realize min_x_lvl_0.stencil([0, 256], [0, 256], [0, 3]) {
                                                                                      produce min_x_lvl_0.stencil {
                                                                                        if (t6224) {
                                                                                          for (min_x_lvl_0.s0.n, 0, 3) {
                                                                                            for (min_x_lvl_0.s0.ty, 0, 256) {
                                                                                              for (min_x_lvl_0.s0.tx, 0, 256) {
                                                                                                min_x_lvl_0.stencil(min_x_lvl_0.s0.tx, min_x_lvl_0.s0.ty, min_x_lvl_0.s0.n) = 0
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          for (min_x_lvl_0.s1.n, 0, 3) {
                                                                                            for (min_x_lvl_0.s1.ty, 0, 256) {
                                                                                              for (min_x_lvl_0.s1.tx, 0, 256) {
                                                                                                for (min_x_lvl_0.s1.r_search_lvl_0$y, -4, 9) {
                                                                                                  for (min_x_lvl_0.s1.r_search_lvl_0$x, -4, 9) {
                                                                                                    realize min_val_lvl_0.stencil([0, 256], [0, 256], [0, 3]) {
                                                                                                      produce min_val_lvl_0.stencil {
                                                                                                        for (min_val_lvl_0.s0.n, 0, 3) {
                                                                                                          for (min_val_lvl_0.s0.ty, 0, 256) {
                                                                                                            for (min_val_lvl_0.s0.tx, 0, 256) {
                                                                                                              min_val_lvl_0.stencil(min_val_lvl_0.s0.tx, min_val_lvl_0.s0.ty, min_val_lvl_0.s0.n) = (uint32)2147483647
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                        for (min_val_lvl_0.s1.n, 0, 3) {
                                                                                                          for (min_val_lvl_0.s1.ty, 0, 256) {
                                                                                                            let t6228 = (min_val_lvl_0.s1.ty/2)
                                                                                                            for (min_val_lvl_0.s1.tx, 0, 256) {
                                                                                                              let t6231 = (min_val_lvl_0.s1.tx/2)
                                                                                                              for (min_val_lvl_0.s1.r_search_lvl_0$y, -4, 9) {
                                                                                                                for (min_val_lvl_0.s1.r_search_lvl_0$x, -4, 9) {
                                                                                                                  realize sum$4.stencil([min_val_lvl_0.s1.tx, 1], [min_val_lvl_0.s1.ty, 1], [min_val_lvl_0.s1.n, 1], [min_val_lvl_0.s1.r_search_lvl_0$x, 1], [min_val_lvl_0.s1.r_search_lvl_0$y, 1]) {
                                                                                                                    produce sum$4.stencil {
                                                                                                                      sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) = (uint32)0
                                                                                                                      for (sum$4.s1.r_tile_lvl_0$y, 0, 16) {
                                                                                                                        let t6239 = (min_val_lvl_0.s1.ty*16)
                                                                                                                        let t6237 = min((sum$4.s1.r_tile_lvl_0$y + t6239), 255)
                                                                                                                        for (sum$4.s1.r_tile_lvl_0$x, 0, 16) {
                                                                                                                          sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) = (sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) + uint32(abs((int16(f0.stencil(min(((min_val_lvl_0.s1.tx*16) + sum$4.s1.r_tile_lvl_0$x), 255), t6237, 0)) - int16(f0.stencil(max(min(((((min_val_lvl_0.s1.tx*16) + int32((f10.stencil(t6231, t6228, 0, min_val_lvl_0.s1.n)*(int16)2))) + min_val_lvl_0.s1.r_search_lvl_0$x) + sum$4.s1.r_tile_lvl_0$x), 255), 0), max(min((((t6239 + int32((f10.stencil(t6231, t6228, 1, min_val_lvl_0.s1.n)*(int16)2))) + min_val_lvl_0.s1.r_search_lvl_0$y) + sum$4.s1.r_tile_lvl_0$y), 255), 0), min_val_lvl_0.s1.n))))))
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                    consume sum$4.stencil {
                                                                                                                      min_val_lvl_0.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n) = min(sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y), min_val_lvl_0.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n))
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                      consume min_val_lvl_0.stencil {
                                                                                                        realize sum$4.stencil([0, 256], [0, 256], [0, 3], [-4, 9], [-4, 9]) {
                                                                                                          produce sum$4.stencil {
                                                                                                            for (sum$4.s0.y_s_lvl_0, -4, 9) {
                                                                                                              for (sum$4.s0.x_s_lvl_0, -4, 9) {
                                                                                                                for (sum$4.s0.n, 0, 3) {
                                                                                                                  for (sum$4.s0.ty, 0, 256) {
                                                                                                                    for (sum$4.s0.tx, 0, 256) {
                                                                                                                      sum$4.stencil(sum$4.s0.tx, sum$4.s0.ty, sum$4.s0.n, sum$4.s0.x_s_lvl_0, sum$4.s0.y_s_lvl_0) = (uint32)0
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                            for (sum$4.s1.y_s_lvl_0, -4, 9) {
                                                                                                              for (sum$4.s1.x_s_lvl_0, -4, 9) {
                                                                                                                for (sum$4.s1.n, 0, 3) {
                                                                                                                  for (sum$4.s1.ty, 0, 256) {
                                                                                                                    let t6243 = (sum$4.s1.ty*16)
                                                                                                                    let t6241 = (sum$4.s1.ty/2)
                                                                                                                    for (sum$4.s1.tx, 0, 256) {
                                                                                                                      let t6248 = (sum$4.s1.tx*16)
                                                                                                                      let t6246 = (sum$4.s1.tx/2)
                                                                                                                      for (sum$4.s1.r_tile_lvl_0$y, 0, 16) {
                                                                                                                        let t6249 = min((sum$4.s1.r_tile_lvl_0$y + t6243), 255)
                                                                                                                        let t6251 = (sum$4.s1.y_s_lvl_0 + t6243)
                                                                                                                        for (sum$4.s1.r_tile_lvl_0$x, 0, 16) {
                                                                                                                          sum$4.stencil(sum$4.s1.tx, sum$4.s1.ty, sum$4.s1.n, sum$4.s1.x_s_lvl_0, sum$4.s1.y_s_lvl_0) = (sum$4.stencil(sum$4.s1.tx, sum$4.s1.ty, sum$4.s1.n, sum$4.s1.x_s_lvl_0, sum$4.s1.y_s_lvl_0) + uint32(abs((int16(f0.stencil(min((sum$4.s1.r_tile_lvl_0$x + t6248), 255), t6249, 0)) - int16(f0.stencil(max(min((((sum$4.s1.x_s_lvl_0 + t6248) + int32((f10.stencil(t6246, t6241, 0, sum$4.s1.n)*(int16)2))) + sum$4.s1.r_tile_lvl_0$x), 255), 0), max(min(((t6251 + int32((f10.stencil(t6246, t6241, 1, sum$4.s1.n)*(int16)2))) + sum$4.s1.r_tile_lvl_0$y), 255), 0), sum$4.s1.n))))))
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                          consume sum$4.stencil {
                                                                                                            min_x_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n) = select((sum$4.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n, min_x_lvl_0.s1.r_search_lvl_0$x, min_x_lvl_0.s1.r_search_lvl_0$y) < min_val_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n)), min_x_lvl_0.s1.r_search_lvl_0$x, min_x_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n))
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      consume min_x_lvl_0.stencil {
                                                                                        f9.stencil(f9.s0.tx, f9.s0.ty, 0, f9.s0.n) = select(t6225, (int16)0, ((f10.stencil((f9.s0.tx/2), t6226, 0, f9.s0.n)*(int16)2) + int16(min_x_lvl_0.stencil(f9.s0.tx, f9.s0.ty, f9.s0.n))))
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        consume f9.stencil {
                                                                          realize val.stencil([0, 16], [0, 16], [0, 156], [0, 139], [0, 3]) {
                                                                            produce val.stencil {
                                                                              for (val.s0.n, 0, 3) {
                                                                                let t6252 = (val.s0.n == 0)
                                                                                for (val.s0.ty_image, 0, 139) {
                                                                                  let t6253 = (val.s0.ty_image/4)
                                                                                  for (val.s0.tx_image, 0, 156) {
                                                                                    let t6256 = (val.s0.tx_image/4)
                                                                                    for (val.s0.yi, 0, 16) {
                                                                                      let t6261 = (val.s0.ty_image*8)
                                                                                      for (val.s0.xi, 0, 16) {
                                                                                        val.stencil(val.s0.xi, val.s0.yi, val.s0.tx_image, val.s0.ty_image, val.s0.n) = (let t6008.s = select(t6252, (val.s0.tx_image*8), ((val.s0.tx_image*8) + int32((f9.stencil(t6256, t6253, 0, val.s0.n)*(int16)2)))) in (let t6009.s = select(t6252, t6261, (t6261 + int32((f9.stencil(t6256, t6253, 1, val.s0.n)*(int16)2)))) in select(((((0 <= (t6008.s + val.s0.xi)) && ((t6008.s + val.s0.xi) < _halide_buffer_get_extent(input.buffer, 0))) && (0 <= (t6009.s + val.s0.yi))) && ((t6009.s + val.s0.yi) < _halide_buffer_get_extent(input.buffer, 1))), hw_input_copy.stencil((t6008.s + val.s0.xi), (t6009.s + val.s0.yi), val.s0.n), (uint16)0)))
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            consume val.stencil {
                                                                              realize dist_tile.stencil([0, 156], [0, 139], [0, 3]) {
                                                                                produce dist_tile.stencil {
                                                                                  for (dist_tile.s0.n, 0, 3) {
                                                                                    for (dist_tile.s0.ty_image, 0, 139) {
                                                                                      let t6263 = (dist_tile.s0.ty_image/4)
                                                                                      for (dist_tile.s0.tx_image, 0, 156) {
                                                                                        realize sum$5.stencil([dist_tile.s0.tx_image, 1], [dist_tile.s0.ty_image, 1], [dist_tile.s0.n, 1]) {
                                                                                          produce sum$5.stencil {
                                                                                            sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = (uint16)0
                                                                                            let t6266 = (dist_tile.s0.tx_image/4)
                                                                                            for (sum$5.s1.G_R_tile$y, 0, 8) {
                                                                                              let t6270 = (dist_tile.s0.ty_image*4)
                                                                                              for (sum$5.s1.G_R_tile$x, 0, 8) {
                                                                                                sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = (sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) + abs((int16(gray.stencil(max(min(((dist_tile.s0.tx_image*4) + sum$5.s1.G_R_tile$x), ((_halide_buffer_get_extent(input.buffer, 0)/2) + -1)), 0), max(min((sum$5.s1.G_R_tile$y + t6270), ((_halide_buffer_get_extent(input.buffer, 1)/2) + -1)), 0), 0)) - int16(gray.stencil(max(min((((dist_tile.s0.tx_image*4) + int32(f9.stencil(t6266, t6263, 0, dist_tile.s0.n))) + sum$5.s1.G_R_tile$x), ((_halide_buffer_get_extent(input.buffer, 0)/2) + -1)), 0), max(min(((t6270 + int32(f9.stencil(t6266, t6263, 1, dist_tile.s0.n))) + sum$5.s1.G_R_tile$y), ((_halide_buffer_get_extent(input.buffer, 1)/2) + -1)), 0), dist_tile.s0.n)))))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          consume sum$5.stencil {
                                                                                            dist_tile.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n)
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                consume dist_tile.stencil {
                                                                                  realize dist_tile_norm.stencil([0, 156], [0, 139], [0, 3]) {
                                                                                    produce dist_tile_norm.stencil {
                                                                                      for (dist_tile_norm.s0.n, 0, 3) {
                                                                                        for (dist_tile_norm.s0.ty_image, 0, 139) {
                                                                                          for (dist_tile_norm.s0.tx_image, 0, 156) {
                                                                                            dist_tile_norm.stencil(dist_tile_norm.s0.tx_image, dist_tile_norm.s0.ty_image, dist_tile_norm.s0.n) = (dist_tile.stencil(dist_tile_norm.s0.tx_image, dist_tile_norm.s0.ty_image, dist_tile_norm.s0.n)/(uint16)64)
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    consume dist_tile_norm.stencil {
                                                                                      realize weight.stencil([0, 156], [0, 139], [0, 3]) {
                                                                                        produce weight.stencil {
                                                                                          for (weight.s0.n, 0, 3) {
                                                                                            let t6271 = (weight.s0.n == 0)
                                                                                            for (weight.s0.ty_image, 0, 139) {
                                                                                              for (weight.s0.tx_image, 0, 156) {
                                                                                                weight.stencil(weight.s0.tx_image, weight.s0.ty_image, weight.s0.n) = select(t6271, (uint16)256, ((uint16)256 - uint16(min(((max(int32((int16(dist_tile_norm.stencil(weight.s0.tx_image, weight.s0.ty_image, weight.s0.n)) + (int16)-5)), 0)*256)/21), 256))))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        consume weight.stencil {
                                                                                          realize output_tiled.stencil([0, 16], [0, 16], [0, 156], [0, 139]) {
                                                                                            produce output_tiled.stencil {
                                                                                              for (output_tiled.s0.ty_image, 0, 139) {
                                                                                                for (output_tiled.s0.tx_image, 0, 156) {
                                                                                                  for (output_tiled.s0.yi, 0, 16) {
                                                                                                    for (output_tiled.s0.xi, 0, 16) {
                                                                                                      realize sum$7.stencil([output_tiled.s0.tx_image, 1], [output_tiled.s0.ty_image, 1], [output_tiled.s0.xi, 1], [output_tiled.s0.yi, 1]) {
                                                                                                        produce sum$7.stencil {
                                                                                                          sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) = (uint16)0
                                                                                                          for (sum$7.s1.r_imgs$x, 0, 3) {
                                                                                                            sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) = (sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) + uint16(((uint32(weight.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, sum$7.s1.r_imgs$x))*uint32(val.stencil(output_tiled.s0.xi, output_tiled.s0.yi, output_tiled.s0.tx_image, output_tiled.s0.ty_image, sum$7.s1.r_imgs$x)))/(uint32)256)))
                                                                                                          }
                                                                                                        }
                                                                                                        consume sum$7.stencil {
                                                                                                          output_tiled.stencil(output_tiled.s0.xi, output_tiled.s0.yi, output_tiled.s0.tx_image, output_tiled.s0.ty_image) = sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi)
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                            consume output_tiled.stencil {
                                                                                              realize sum_weight.stencil([0, 156], [0, 139]) {
                                                                                                produce sum_weight.stencil {
                                                                                                  for (sum_weight.s0.ty_image, 0, 139) {
                                                                                                    for (sum_weight.s0.tx_image, 0, 156) {
                                                                                                      realize sum$6.stencil([sum_weight.s0.tx_image, 1], [sum_weight.s0.ty_image, 1]) {
                                                                                                        produce sum$6.stencil {
                                                                                                          sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = (uint16)0
                                                                                                          for (sum$6.s1.r_imgs$x, 0, 3) {
                                                                                                            sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = (sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) + weight.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image, sum$6.s1.r_imgs$x))
                                                                                                          }
                                                                                                        }
                                                                                                        consume sum$6.stencil {
                                                                                                          sum_weight.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image)
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                                consume sum_weight.stencil {
                                                                                                  realize output_tiled_normalized_cosined.stencil([0, 16], [0, 16], [0, 156], [0, 139]) {
                                                                                                    produce output_tiled_normalized_cosined.stencil {
                                                                                                      for (output_tiled_normalized_cosined.s0.ty_image, 0, 139) {
                                                                                                        for (output_tiled_normalized_cosined.s0.tx_image, 0, 156) {
                                                                                                          for (output_tiled_normalized_cosined.s0.yi, 0, 16) {
                                                                                                            let t6272 = (1.000000f - cos_f32(((float32(output_tiled_normalized_cosined.s0.yi)*0.392699f) + 0.196350f)))
                                                                                                            for (output_tiled_normalized_cosined.s0.xi, 0, 16) {
                                                                                                              output_tiled_normalized_cosined.stencil(output_tiled_normalized_cosined.s0.xi, output_tiled_normalized_cosined.s0.yi, output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image) = uint16(((((((1.000000f - cos_f32(((float32(output_tiled_normalized_cosined.s0.xi)*0.392699f) + 0.196350f)))*float32(output_tiled.stencil(output_tiled_normalized_cosined.s0.xi, output_tiled_normalized_cosined.s0.yi, output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image)))*t6272)*0.250000f)/float32(sum_weight.stencil(output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image)))*256.000000f))
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                    consume output_tiled_normalized_cosined.stencil {
                                                                                                      realize final_merge_output.stencil([0, 1256], [0, 1120]) {
                                                                                                        produce final_merge_output.stencil {
                                                                                                          for (final_merge_output.s0.y, 0, 1120) {
                                                                                                            for (final_merge_output.s0.x, 0, 1256) {
                                                                                                              final_merge_output.stencil(final_merge_output.s0.x, final_merge_output.s0.y) = (uint16)0
                                                                                                            }
                                                                                                          }
                                                                                                          for (final_merge_output.s1.tile_RDom$w, 0, 16) {
                                                                                                            for (final_merge_output.s1.tile_RDom$z, 0, 16) {
                                                                                                              for (final_merge_output.s1.tile_RDom$y, 0, 139) {
                                                                                                                let t6273 = ((final_merge_output.s1.tile_RDom$y*8) + final_merge_output.s1.tile_RDom$w)
                                                                                                                for (final_merge_output.s1.tile_RDom$x, 0, 156) {
                                                                                                                  final_merge_output.stencil(((final_merge_output.s1.tile_RDom$x*8) + final_merge_output.s1.tile_RDom$z), t6273) = (final_merge_output.stencil(((final_merge_output.s1.tile_RDom$x*8) + final_merge_output.s1.tile_RDom$z), t6273) + output_tiled_normalized_cosined.stencil(final_merge_output.s1.tile_RDom$z, final_merge_output.s1.tile_RDom$w, final_merge_output.s1.tile_RDom$x, final_merge_output.s1.tile_RDom$y))
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                        consume final_merge_output.stencil {
                                                                                                          for (provisional_output.s0.y.yi, 0, 512) {
                                                                                                            let t6280 = (provisional_output.s0.y.yi/2)
                                                                                                            let t6275 = (provisional_output.s0.y.yi % 2)
                                                                                                            for (provisional_output.s0.x.xi, 0, 512) {
                                                                                                              let t6299 = (provisional_output.s0.x.xi/248)
                                                                                                              let t6300 = ((t6299*2) + provisional_output.s0.y.yi)
                                                                                                              let t6301 = ((provisional_output.s0.x.xi + 124)/248)
                                                                                                              let t6302 = ((provisional_output.s0.x.xi + 372)/248)
                                                                                                              let t6303 = ((provisional_output.s0.x.xi + 620)/248)
                                                                                                              let t6304 = ((provisional_output.s0.x.xi + 868)/248)
                                                                                                              let t6305 = (provisional_output.s0.x.xi/124)
                                                                                                              let t6295 = (t6275 != 0)
                                                                                                              let t6291 = (t6275 == 0)
                                                                                                              let t6290 = (t6305 % 2)
                                                                                                              let t6282 = ((provisional_output.s0.x.xi/2) % 62)
                                                                                                              let t6281 = ((((t6280*2) + t6305) + 1) % 2)
                                                                                                              let t6283 = (provisional_output.s0.x.xi % 2)
                                                                                                              let t6294 = (t6280 + t6304)
                                                                                                              let t6288 = (t6280 + t6303)
                                                                                                              let t6284 = (t6280 + t6302)
                                                                                                              let t6293 = (t6280 + t6301)
                                                                                                              let t6292 = (t6280 + t6299)
                                                                                                              let t6289 = ((t6304*2) + provisional_output.s0.y.yi)
                                                                                                              let t6286 = ((t6303*2) + provisional_output.s0.y.yi)
                                                                                                              let t6285 = ((t6302*2) + provisional_output.s0.y.yi)
                                                                                                              let t6287 = ((t6301*2) + provisional_output.s0.y.yi)
                                                                                                              let t6297 = (t6300 + 6)
                                                                                                              let t6296 = (t6300 + 4)
                                                                                                              let t6298 = (t6300 + 2)
                                                                                                              for (provisional_output.s0.c, 0, 3) {
                                                                                                                provisional_output.glb.stencil(provisional_output.s0.x.xi, provisional_output.s0.y.yi, provisional_output.s0.c) = (let t6017.s = ((t6282*4) + ((t6283*2) + t6275)) in (let t6018 = ((((t6017.s + 2) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 2)/4) + t6282))*2)) in (let t6021 = ((t6284*2) + (((t6017.s + 2) % 4) % 2)) in (let t6023 = ((((t6017.s + 2) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 6)/4) + t6282))*2)) in (let t6026 = min(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6285), max(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6286), max(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6287), max(final_merge_output.stencil(t6018, t6021), final_merge_output.stencil(t6023, t6021))))) in (let t6028 = ((t6288*2) + (((t6017.s + 2) % 4) % 2)) in (let t6029 = min(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6286), max(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6289), max(final_merge_output.stencil((((((t6281*64) + t6282)*2) + t6283) + 2), t6285), max(final_merge_output.stencil(t6018, t6028), final_merge_output.stencil(t6023, t6028))))) in (let t6031 = (t6290 == 0) in (let t6033 = (t6031 && t6291) in (let t6035.s = ((t6282*4) + ((t6283*2) + t6275)) in (let t6036 = ((((t6035.s + 3) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 3)/4) + t6282))*2)) in (let t6039 = ((t6292*2) + (((t6035.s + 3) % 4) % 2)) in (let t6041.s = ((t6282*4) + ((t6283*2) + t6275)) in (let t6043 = ((t6292*2) + (((t6041.s + 1) % 4) % 2)) in (let t6045 = ((((t6041.s + 1) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 5)/4) + t6282))*2)) in (let t6047 = (min(final_merge_output.stencil(t6036, (t6039 + 4)), max(final_merge_output.stencil(t6036, (t6039 + 6)), max(final_merge_output.stencil(t6036, (t6039 + 2)), max(final_merge_output.stencil(((((t6041.s + 1) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 1)/4) + t6282))*2)), (t6043 + 4)), final_merge_output.stencil(t6045, (t6043 + 4)))))) + min(final_merge_output.stencil(t6045, (t6043 + 4)), max(final_merge_output.stencil(t6045, (t6043 + 6)), max(final_merge_output.stencil(t6045, (t6043 + 2)), max(final_merge_output.stencil(t6036, (t6039 + 4)), final_merge_output.stencil(((((t6035.s + 3) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 7)/4) + t6282))*2)), (t6039 + 4))))))) in (let t6048 = (t6290 != 0) in (let t6049 = (t6048 && t6291) in (let t6050 = ((((t6035.s + 3) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 3)/4) + t6282))*2)) in (let t6051 = ((t6284*2) + (((t6035.s + 3) % 4) % 2)) in (let t6052 = ((t6288*2) + (((t6035.s + 3) % 4) % 2)) in (let t6054 = ((((t6041.s + 1) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 1)/4) + t6282))*2)) in (let t6055 = ((t6284*2) + (((t6041.s + 1) % 4) % 2)) in (let t6056 = ((((t6041.s + 1) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 5)/4) + t6282))*2)) in (let t6058 = ((t6288*2) + (((t6041.s + 1) % 4) % 2)) in (let t6059 = ((((t6035.s + 3) % 4)/2) + (((t6281*64) + (((((t6283*2) + t6275) + 7)/4) + t6282))*2)) in (let t6060 = (min(final_merge_output.stencil(t6056, t6055), max(final_merge_output.stencil(t6056, t6058), max(final_merge_output.stencil(t6056, ((t6293*2) + (((t6041.s + 1) % 4) % 2))), max(final_merge_output.stencil(t6050, t6051), final_merge_output.stencil(t6059, t6051))))) + (min(final_merge_output.stencil(t6056, t6058), max(final_merge_output.stencil(t6056, ((t6294*2) + (((t6041.s + 1) % 4) % 2))), max(final_merge_output.stencil(t6056, t6055), max(final_merge_output.stencil(t6050, t6052), final_merge_output.stencil(t6059, t6052))))) + (min(final_merge_output.stencil(t6050, t6051), max(final_merge_output.stencil(t6050, t6052), max(final_merge_output.stencil(t6050, ((t6293*2) + (((t6035.s + 3) % 4) % 2))), max(final_merge_output.stencil(t6054, t6055), final_merge_output.stencil(t6056, t6055))))) + min(final_merge_output.stencil(t6050, t6052), max(final_merge_output.stencil(t6050, ((t6294*2) + (((t6035.s + 3) % 4) % 2))), max(final_merge_output.stencil(t6050, t6051), max(final_merge_output.stencil(t6054, t6058), final_merge_output.stencil(t6056, t6058)))))))) in (let t6062 = (t6031 && t6295) in (let t6064 = ((t6292*2) + (((t6017.s + 2) % 4) % 2)) in (let t6065 = min(final_merge_output.stencil((((((t6290*64) + t6282)*2) + t6283) + 2), t6296), max(final_merge_output.stencil((((((t6290*64) + t6282)*2) + t6283) + 2), t6297), max(final_merge_output.stencil((((((t6290*64) + t6282)*2) + t6283) + 2), t6298), max(final_merge_output.stencil(((((t6017.s + 2) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 2)/4) + t6282))*2)), (t6064 + 4)), final_merge_output.stencil(((((t6017.s + 2) % 4)/2) + (((t6290*64) + (((((t6283*2) + t6275) + 6)/4) + t6282))*2)), (t6064 + 4)))))) in (let t6067.s = select(t6062, t6065, select(t6049, (t6060/(uint16)4), select(t6033, (t6047/(uint16)2), ((t6026 + t6029)/(uint16)2)))) in (let t6068.s = select(((t6048 && t6295) || t6033), t6065, (((t6026 + t6047) + t6029)/(uint16)4)) in (let t6069.s = select(t6049, t6065, select(t6062, (t6060/(uint16)4), select(t6033, ((t6026 + t6029)/(uint16)2), (t6047/(uint16)2)))) in (let t6070 = select((provisional_output.s0.c == 0), ((int16(((int32(t6067.s)*454)/256)) + int16(((int32(t6068.s)*-196)/256))) + int16(((int32(t6069.s)*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(t6067.s)*-66)/256)) + int16(((int32(t6068.s)*386)/256))) + int16(((int32(t6069.s)*-64)/256))), (int16(((int32(t6068.s)*-186)/256)) + int16(((int32(t6069.s)*442)/256))))) in (let t6071 = float32(int32(select((t6070 < (int16)0), (uint16)0, uint16(t6070)))) in (let t6072 = pow_f32((max(min((t6071*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f) in uint8((float32(uint8(select((1.000000f < t6071), select((1023.000000f < t6071), (uint16)1023, uint16((max(min(select((0.500000f < t6072), (1.000000f - (((1.000000f - t6072)*(1.000000f - t6072))*2.000000f)), ((t6072*t6072)*2.000000f)), 1.000000f), 0.000000f)*1023.000000f))), (uint16)0)))*0.249267f))))))))))))))))))))))))))))))))))))))
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    consume provisional_output.glb.stencil {
                      for (provisional_output_global_wrapper.s0.y.yi, 0, 512) {
                        for (provisional_output_global_wrapper.s0.x.xi, 0, 512) {
                          for (provisional_output_global_wrapper.s0.c, 0, 3) {
                            provisional_output_global_wrapper.stencil(provisional_output_global_wrapper.s0.x.xi, provisional_output_global_wrapper.s0.y.yi, provisional_output_global_wrapper.s0.c) = provisional_output.glb.stencil(provisional_output_global_wrapper.s0.x.xi, provisional_output_global_wrapper.s0.y.yi, provisional_output_global_wrapper.s0.c)
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        consume provisional_output_global_wrapper.stencil {
          produce output {
            for (output.s0.c, 0, 3) {
              for (output.s0.y, 0, 512) {
                for (output.s0.x, 0, 512) {
                  output[(((_halide_buffer_get_stride(output.buffer, 1)*output.s0.y) + ((_halide_buffer_get_stride(output.buffer, 2)*output.s0.c) - ((_halide_buffer_get_min(output.buffer, 1)*_halide_buffer_get_stride(output.buffer, 1)) + (_halide_buffer_get_min(output.buffer, 0) + (_halide_buffer_get_min(output.buffer, 2)*_halide_buffer_get_stride(output.buffer, 2)))))) + output.s0.x)] = provisional_output_global_wrapper.stencil(output.s0.x, output.s0.y, output.s0.c)
                }
              }
            }
          }
        }
      }
    }
  }
  halide_trace_helper("hdr_plus", make_struct((void *), ), make_struct((int32_t *), ), 3, 0, 0, 9, halide_trace_helper("hdr_plus", make_struct((void *), ), make_struct((int32_t *), ), 3, 0, 0, 8, 0, 0, 0, ""), 0, 0, "")
}


[INFO] Adding clockwork to function hdr_plus_clockwork
[INFO] Module.compile(): clockwork_source_name = ./bin/hdr_plus_clockwork.cpp
creating file from name: hdr_plus_clockwork
hw_input.stencil input stencil has bounds: {[-32768, (((max((33395*2), 34023) + 32768) + -32768) - 1)], [-32768, (((max((33327*2), 33887) + 32768) + -32768) - 1)], [0, ((3 + 0) - 1)]}
 min: [-32768,-32768,0] extent: [99558,99422,3]
realize hw_input_global_wrapper.glb.stencil([-32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
  produce hw_input_global_wrapper.glb.stencil {
    for (hw_input_global_wrapper.s0.n, 0, 3) {
      for (hw_input_global_wrapper.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)) {
        for (hw_input_global_wrapper.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)) {
          hw_input_global_wrapper.glb.stencil(hw_input_global_wrapper.s0.x, hw_input_global_wrapper.s0.y, hw_input_global_wrapper.s0.n) = hw_input.stencil(hw_input_global_wrapper.s0.x, hw_input_global_wrapper.s0.y, hw_input_global_wrapper.s0.n)
        }
      }
    }
  }
  consume hw_input_global_wrapper.glb.stencil {
    realize provisional_output.glb.stencil([0, 512], [0, 512], [0, 3]) {
      produce provisional_output.glb.stencil {
        realize hw_input_global_wrapper_global_wrapper.stencil([-32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
          produce hw_input_global_wrapper_global_wrapper.stencil {
            for (hw_input_global_wrapper_global_wrapper.s0.n, 0, 3) {
              for (hw_input_global_wrapper_global_wrapper.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)) {
                for (hw_input_global_wrapper_global_wrapper.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)) {
                  hw_input_global_wrapper_global_wrapper.stencil(hw_input_global_wrapper_global_wrapper.s0.x, hw_input_global_wrapper_global_wrapper.s0.y, hw_input_global_wrapper_global_wrapper.s0.n) = hw_input_global_wrapper.glb.stencil(hw_input_global_wrapper_global_wrapper.s0.x, hw_input_global_wrapper_global_wrapper.s0.y, hw_input_global_wrapper_global_wrapper.s0.n)
                }
              }
            }
          }
          consume hw_input_global_wrapper_global_wrapper.stencil {
            realize hw_input_copy.stencil([-32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)], [-32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)], [0, 3]) {
              produce hw_input_copy.stencil {
                for (hw_input_copy.s0.n, 0, 3) {
                  for (hw_input_copy.s0.y, -32768, (max((max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)*2), 33887) + 32768)) {
                    for (hw_input_copy.s0.x, -32768, (max((max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)*2), 34023) + 32768)) {
                      hw_input_copy.stencil(hw_input_copy.s0.x, hw_input_copy.s0.y, hw_input_copy.s0.n) = hw_input_global_wrapper_global_wrapper.stencil(hw_input_copy.s0.x, hw_input_copy.s0.y, hw_input_copy.s0.n)
                    }
                  }
                }
              }
              consume hw_input_copy.stencil {
                realize gray.stencil([0, max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)], [0, max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)], [0, 3]) {
                  produce gray.stencil {
                    for (gray.s0.n, 0, 3) {
                      for (gray.s0.y, 0, max(min((_halide_buffer_get_extent(0, 1)/2), 33327), 256)) {
                        for (gray.s0.x, 0, max(min((_halide_buffer_get_extent(0, 0)/2), 33395), 256)) {
                          gray.stencil(gray.s0.x, gray.s0.y, gray.s0.n) = ((hw_input_copy.stencil(((gray.s0.x*2) + 1), (gray.s0.y*2), gray.s0.n) + (hw_input_copy.stencil((gray.s0.x*2), (gray.s0.y*2), gray.s0.n) + (hw_input_copy.stencil((gray.s0.x*2), ((gray.s0.y*2) + 1), gray.s0.n) + hw_input_copy.stencil(((gray.s0.x*2) + 1), ((gray.s0.y*2) + 1), gray.s0.n))))/(uint16)4)
                        }
                      }
                    }
                  }
                  consume gray.stencil {
                    realize f0.stencil([0, 256], [0, 256], [0, 3]) {
                      produce f0.stencil {
                        for (f0.s0.n, 0, 3) {
                          for (f0.s0.y, 0, 256) {
                            for (f0.s0.x, 0, 256) {
                              f0.stencil(f0.s0.x, f0.s0.y, f0.s0.n) = gray.stencil(f0.s0.x, f0.s0.y, f0.s0.n)
                            }
                          }
                        }
                      }
                      consume f0.stencil {
                        realize f1.stencil([0, 128], [0, 128], [0, 3]) {
                          produce f1.stencil {
                            for (f1.s0.n, 0, 3) {
                              for (f1.s0.y, 0, 128) {
                                for (f1.s0.x, 0, 128) {
                                  f1.stencil(f1.s0.x, f1.s0.y, f1.s0.n) = (((f0.stencil((max((f1.s0.x*2), 1) + -1), (f1.s0.y*2), f1.s0.n)*(uint16)3) + (f0.stencil((max((f1.s0.x*2), 1) + -1), (max((f1.s0.y*2), 1) + -1), f1.s0.n) + ((f0.stencil((max((f1.s0.x*2), 1) + -1), ((f1.s0.y*2) + 1), f1.s0.n)*(uint16)3) + (f0.stencil((max((f1.s0.x*2), 1) + -1), (min((f1.s0.y*2), 253) + 2), f1.s0.n) + ((f0.stencil((f1.s0.x*2), (max((f1.s0.y*2), 1) + -1), f1.s0.n)*(uint16)3) + ((f0.stencil((f1.s0.x*2), (f1.s0.y*2), f1.s0.n)*(uint16)9) + ((f0.stencil((f1.s0.x*2), ((f1.s0.y*2) + 1), f1.s0.n)*(uint16)9) + ((f0.stencil((f1.s0.x*2), (min((f1.s0.y*2), 253) + 2), f1.s0.n)*(uint16)3) + ((f0.stencil(((f1.s0.x*2) + 1), (max((f1.s0.y*2), 1) + -1), f1.s0.n)*(uint16)3) + ((f0.stencil(((f1.s0.x*2) + 1), (f1.s0.y*2), f1.s0.n)*(uint16)9) + ((f0.stencil(((f1.s0.x*2) + 1), ((f1.s0.y*2) + 1), f1.s0.n)*(uint16)9) + ((f0.stencil(((f1.s0.x*2) + 1), (min((f1.s0.y*2), 253) + 2), f1.s0.n)*(uint16)3) + (f0.stencil((min((f1.s0.x*2), 253) + 2), (max((f1.s0.y*2), 1) + -1), f1.s0.n) + ((f0.stencil((min((f1.s0.x*2), 253) + 2), (f1.s0.y*2), f1.s0.n)*(uint16)3) + (f0.stencil((min((f1.s0.x*2), 253) + 2), (min((f1.s0.y*2), 253) + 2), f1.s0.n) + (f0.stencil((min((f1.s0.x*2), 253) + 2), ((f1.s0.y*2) + 1), f1.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                }
                              }
                            }
                          }
                          consume f1.stencil {
                            realize f2.stencil([0, 64], [0, 64], [0, 3]) {
                              produce f2.stencil {
                                for (f2.s0.n, 0, 3) {
                                  for (f2.s0.y, 0, 64) {
                                    for (f2.s0.x, 0, 64) {
                                      f2.stencil(f2.s0.x, f2.s0.y, f2.s0.n) = (((f1.stencil((max((f2.s0.x*2), 1) + -1), (f2.s0.y*2), f2.s0.n)*(uint16)3) + (f1.stencil((max((f2.s0.x*2), 1) + -1), (max((f2.s0.y*2), 1) + -1), f2.s0.n) + ((f1.stencil((max((f2.s0.x*2), 1) + -1), ((f2.s0.y*2) + 1), f2.s0.n)*(uint16)3) + (f1.stencil((max((f2.s0.x*2), 1) + -1), (min((f2.s0.y*2), 125) + 2), f2.s0.n) + ((f1.stencil((f2.s0.x*2), (max((f2.s0.y*2), 1) + -1), f2.s0.n)*(uint16)3) + ((f1.stencil((f2.s0.x*2), (f2.s0.y*2), f2.s0.n)*(uint16)9) + ((f1.stencil((f2.s0.x*2), ((f2.s0.y*2) + 1), f2.s0.n)*(uint16)9) + ((f1.stencil((f2.s0.x*2), (min((f2.s0.y*2), 125) + 2), f2.s0.n)*(uint16)3) + ((f1.stencil(((f2.s0.x*2) + 1), (max((f2.s0.y*2), 1) + -1), f2.s0.n)*(uint16)3) + ((f1.stencil(((f2.s0.x*2) + 1), (f2.s0.y*2), f2.s0.n)*(uint16)9) + ((f1.stencil(((f2.s0.x*2) + 1), ((f2.s0.y*2) + 1), f2.s0.n)*(uint16)9) + ((f1.stencil(((f2.s0.x*2) + 1), (min((f2.s0.y*2), 125) + 2), f2.s0.n)*(uint16)3) + (f1.stencil((min((f2.s0.x*2), 125) + 2), (max((f2.s0.y*2), 1) + -1), f2.s0.n) + ((f1.stencil((min((f2.s0.x*2), 125) + 2), (f2.s0.y*2), f2.s0.n)*(uint16)3) + (f1.stencil((min((f2.s0.x*2), 125) + 2), (min((f2.s0.y*2), 125) + 2), f2.s0.n) + (f1.stencil((min((f2.s0.x*2), 125) + 2), ((f2.s0.y*2) + 1), f2.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                    }
                                  }
                                }
                              }
                              consume f2.stencil {
                                realize f3.stencil([0, 32], [0, 32], [0, 3]) {
                                  produce f3.stencil {
                                    for (f3.s0.n, 0, 3) {
                                      for (f3.s0.y, 0, 32) {
                                        for (f3.s0.x, 0, 32) {
                                          f3.stencil(f3.s0.x, f3.s0.y, f3.s0.n) = (((f2.stencil((max((f3.s0.x*2), 1) + -1), (f3.s0.y*2), f3.s0.n)*(uint16)3) + (f2.stencil((max((f3.s0.x*2), 1) + -1), (max((f3.s0.y*2), 1) + -1), f3.s0.n) + ((f2.stencil((max((f3.s0.x*2), 1) + -1), ((f3.s0.y*2) + 1), f3.s0.n)*(uint16)3) + (f2.stencil((max((f3.s0.x*2), 1) + -1), (min((f3.s0.y*2), 61) + 2), f3.s0.n) + ((f2.stencil((f3.s0.x*2), (max((f3.s0.y*2), 1) + -1), f3.s0.n)*(uint16)3) + ((f2.stencil((f3.s0.x*2), (f3.s0.y*2), f3.s0.n)*(uint16)9) + ((f2.stencil((f3.s0.x*2), ((f3.s0.y*2) + 1), f3.s0.n)*(uint16)9) + ((f2.stencil((f3.s0.x*2), (min((f3.s0.y*2), 61) + 2), f3.s0.n)*(uint16)3) + ((f2.stencil(((f3.s0.x*2) + 1), (max((f3.s0.y*2), 1) + -1), f3.s0.n)*(uint16)3) + ((f2.stencil(((f3.s0.x*2) + 1), (f3.s0.y*2), f3.s0.n)*(uint16)9) + ((f2.stencil(((f3.s0.x*2) + 1), ((f3.s0.y*2) + 1), f3.s0.n)*(uint16)9) + ((f2.stencil(((f3.s0.x*2) + 1), (min((f3.s0.y*2), 61) + 2), f3.s0.n)*(uint16)3) + (f2.stencil((min((f3.s0.x*2), 61) + 2), (max((f3.s0.y*2), 1) + -1), f3.s0.n) + ((f2.stencil((min((f3.s0.x*2), 61) + 2), (f3.s0.y*2), f3.s0.n)*(uint16)3) + (f2.stencil((min((f3.s0.x*2), 61) + 2), (min((f3.s0.y*2), 61) + 2), f3.s0.n) + (f2.stencil((min((f3.s0.x*2), 61) + 2), ((f3.s0.y*2) + 1), f3.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                        }
                                      }
                                    }
                                  }
                                  consume f3.stencil {
                                    realize f4.stencil([0, 16], [0, 16], [0, 3]) {
                                      produce f4.stencil {
                                        for (f4.s0.n, 0, 3) {
                                          for (f4.s0.y, 0, 16) {
                                            for (f4.s0.x, 0, 16) {
                                              f4.stencil(f4.s0.x, f4.s0.y, f4.s0.n) = (((f3.stencil((max((f4.s0.x*2), 1) + -1), (f4.s0.y*2), f4.s0.n)*(uint16)3) + (f3.stencil((max((f4.s0.x*2), 1) + -1), (max((f4.s0.y*2), 1) + -1), f4.s0.n) + ((f3.stencil((max((f4.s0.x*2), 1) + -1), ((f4.s0.y*2) + 1), f4.s0.n)*(uint16)3) + (f3.stencil((max((f4.s0.x*2), 1) + -1), (min((f4.s0.y*2), 29) + 2), f4.s0.n) + ((f3.stencil((f4.s0.x*2), (max((f4.s0.y*2), 1) + -1), f4.s0.n)*(uint16)3) + ((f3.stencil((f4.s0.x*2), (f4.s0.y*2), f4.s0.n)*(uint16)9) + ((f3.stencil((f4.s0.x*2), ((f4.s0.y*2) + 1), f4.s0.n)*(uint16)9) + ((f3.stencil((f4.s0.x*2), (min((f4.s0.y*2), 29) + 2), f4.s0.n)*(uint16)3) + ((f3.stencil(((f4.s0.x*2) + 1), (max((f4.s0.y*2), 1) + -1), f4.s0.n)*(uint16)3) + ((f3.stencil(((f4.s0.x*2) + 1), (f4.s0.y*2), f4.s0.n)*(uint16)9) + ((f3.stencil(((f4.s0.x*2) + 1), ((f4.s0.y*2) + 1), f4.s0.n)*(uint16)9) + ((f3.stencil(((f4.s0.x*2) + 1), (min((f4.s0.y*2), 29) + 2), f4.s0.n)*(uint16)3) + (f3.stencil((min((f4.s0.x*2), 29) + 2), (max((f4.s0.y*2), 1) + -1), f4.s0.n) + ((f3.stencil((min((f4.s0.x*2), 29) + 2), (f4.s0.y*2), f4.s0.n)*(uint16)3) + (f3.stencil((min((f4.s0.x*2), 29) + 2), (min((f4.s0.y*2), 29) + 2), f4.s0.n) + (f3.stencil((min((f4.s0.x*2), 29) + 2), ((f4.s0.y*2) + 1), f4.s0.n)*(uint16)3))))))))))))))))/(uint16)64)
                                            }
                                          }
                                        }
                                      }
                                      consume f4.stencil {
                                        assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f13", 0, 0, 0, 1))
                                        assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f13", 0, 0, 0, 1))
                                        realize f13.stencil([0, 1], [0, 1], [0, 1], [0, 3]) {
                                          produce f13.stencil {
                                            for (f13.s0.n, 0, 3) {
                                              realize min_y_lvl_4.stencil([0, 16], [0, 16], [0, 3]) if (uint1)0 {
                                                consume min_y_lvl_4.stencil {
                                                  realize min_x_lvl_4.stencil([0, 16], [0, 16], [0, 3]) {
                                                    produce min_x_lvl_4.stencil {
                                                      if ((f13.s0.n != 0)) {
                                                        for (min_x_lvl_4.s0.n, 0, 3) {
                                                          for (min_x_lvl_4.s0.ty, 0, 16) {
                                                            for (min_x_lvl_4.s0.tx, 0, 16) {
                                                              min_x_lvl_4.stencil(min_x_lvl_4.s0.tx, min_x_lvl_4.s0.ty, min_x_lvl_4.s0.n) = 0
                                                            }
                                                          }
                                                        }
                                                        for (min_x_lvl_4.s1.n, 0, 3) {
                                                          for (min_x_lvl_4.s1.ty, 0, 16) {
                                                            for (min_x_lvl_4.s1.tx, 0, 16) {
                                                              for (min_x_lvl_4.s1.r_search_lvl_4$y, -4, 9) {
                                                                for (min_x_lvl_4.s1.r_search_lvl_4$x, -4, 9) {
                                                                  realize min_val_lvl_4.stencil([0, 16], [0, 16], [0, 3]) {
                                                                    produce min_val_lvl_4.stencil {
                                                                      for (min_val_lvl_4.s0.n, 0, 3) {
                                                                        for (min_val_lvl_4.s0.ty, 0, 16) {
                                                                          for (min_val_lvl_4.s0.tx, 0, 16) {
                                                                            min_val_lvl_4.stencil(min_val_lvl_4.s0.tx, min_val_lvl_4.s0.ty, min_val_lvl_4.s0.n) = (uint32)2147483647
                                                                          }
                                                                        }
                                                                      }
                                                                      for (min_val_lvl_4.s1.n, 0, 3) {
                                                                        for (min_val_lvl_4.s1.ty, 0, 16) {
                                                                          for (min_val_lvl_4.s1.tx, 0, 16) {
                                                                            for (min_val_lvl_4.s1.r_search_lvl_4$y, -4, 9) {
                                                                              for (min_val_lvl_4.s1.r_search_lvl_4$x, -4, 9) {
                                                                                realize sum.stencil([min_val_lvl_4.s1.tx, 1], [min_val_lvl_4.s1.ty, 1], [min_val_lvl_4.s1.r_search_lvl_4$x, 1], [min_val_lvl_4.s1.r_search_lvl_4$y, 1], [min_val_lvl_4.s1.n, 1]) {
                                                                                  produce sum.stencil {
                                                                                    sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) = (uint32)0
                                                                                    for (sum.s1.r_tile_lvl_4$y, 0, 16) {
                                                                                      for (sum.s1.r_tile_lvl_4$x, 0, 16) {
                                                                                        sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) = (sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n) + uint32(abs((int16(f4.stencil(min((sum.s1.r_tile_lvl_4$x + (min_val_lvl_4.s1.tx*16)), 15), min((sum.s1.r_tile_lvl_4$y + (min_val_lvl_4.s1.ty*16)), 15), 0)) - int16(f4.stencil(max(min(((min_val_lvl_4.s1.r_search_lvl_4$x + (min_val_lvl_4.s1.tx*16)) + sum.s1.r_tile_lvl_4$x), 15), 0), max(min(((min_val_lvl_4.s1.r_search_lvl_4$y + (min_val_lvl_4.s1.ty*16)) + sum.s1.r_tile_lvl_4$y), 15), 0), min_val_lvl_4.s1.n))))))
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  consume sum.stencil {
                                                                                    min_val_lvl_4.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.n) = min(sum.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.r_search_lvl_4$x, min_val_lvl_4.s1.r_search_lvl_4$y, min_val_lvl_4.s1.n), min_val_lvl_4.stencil(min_val_lvl_4.s1.tx, min_val_lvl_4.s1.ty, min_val_lvl_4.s1.n))
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    consume min_val_lvl_4.stencil {
                                                                      realize sum.stencil([0, 16], [0, 16], [-4, 9], [-4, 9], [0, 3]) {
                                                                        produce sum.stencil {
                                                                          for (sum.s0.n, 0, 3) {
                                                                            for (sum.s0.y_s_lvl_4, -4, 9) {
                                                                              for (sum.s0.x_s_lvl_4, -4, 9) {
                                                                                for (sum.s0.ty, 0, 16) {
                                                                                  for (sum.s0.tx, 0, 16) {
                                                                                    sum.stencil(sum.s0.tx, sum.s0.ty, sum.s0.x_s_lvl_4, sum.s0.y_s_lvl_4, sum.s0.n) = (uint32)0
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          for (sum.s1.n, 0, 3) {
                                                                            for (sum.s1.y_s_lvl_4, -4, 9) {
                                                                              for (sum.s1.x_s_lvl_4, -4, 9) {
                                                                                for (sum.s1.ty, 0, 16) {
                                                                                  for (sum.s1.tx, 0, 16) {
                                                                                    for (sum.s1.r_tile_lvl_4$y, 0, 16) {
                                                                                      for (sum.s1.r_tile_lvl_4$x, 0, 16) {
                                                                                        sum.stencil(sum.s1.tx, sum.s1.ty, sum.s1.x_s_lvl_4, sum.s1.y_s_lvl_4, sum.s1.n) = (sum.stencil(sum.s1.tx, sum.s1.ty, sum.s1.x_s_lvl_4, sum.s1.y_s_lvl_4, sum.s1.n) + uint32(abs((int16(f4.stencil(min((sum.s1.r_tile_lvl_4$x + (sum.s1.tx*16)), 15), min((sum.s1.r_tile_lvl_4$y + (sum.s1.ty*16)), 15), 0)) - int16(f4.stencil(max(min(((sum.s1.x_s_lvl_4 + (sum.s1.tx*16)) + sum.s1.r_tile_lvl_4$x), 15), 0), max(min(((sum.s1.y_s_lvl_4 + (sum.s1.ty*16)) + sum.s1.r_tile_lvl_4$y), 15), 0), sum.s1.n))))))
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        consume sum.stencil {
                                                                          min_x_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n) = select((sum.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.r_search_lvl_4$x, min_x_lvl_4.s1.r_search_lvl_4$y, min_x_lvl_4.s1.n) < min_val_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n)), min_x_lvl_4.s1.r_search_lvl_4$x, min_x_lvl_4.stencil(min_x_lvl_4.s1.tx, min_x_lvl_4.s1.ty, min_x_lvl_4.s1.n))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    consume min_x_lvl_4.stencil {
                                                      f13.stencil(0, 0, 0, f13.s0.n) = select((f13.s0.n == 0), (int16)0, int16(min_x_lvl_4.stencil(0, 0, f13.s0.n)))
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          consume f13.stencil {
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f12", 0, 0, 0, 1))
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f12", 0, 1, 0, 31))
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f12", 0, 1, 0, 31))
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f12", 0, 0, 0, 1))
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f12", 0, 1, 0, 31))
                                            assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f12", 0, 1, 0, 31))
                                            realize f12.stencil([0, 2], [0, 2], [0, 1], [0, 3]) {
                                              produce f12.stencil {
                                                for (f12.s0.n, 0, 3) {
                                                  for (f12.s0.ty, 0, 2) {
                                                    for (f12.s0.tx, 0, 2) {
                                                      realize min_y_lvl_3.stencil([0, 32], [0, 32], [0, 3]) if (uint1)0 {
                                                        consume min_y_lvl_3.stencil {
                                                          realize min_x_lvl_3.stencil([0, 32], [0, 32], [0, 3]) {
                                                            produce min_x_lvl_3.stencil {
                                                              if ((f12.s0.n != 0)) {
                                                                for (min_x_lvl_3.s0.n, 0, 3) {
                                                                  for (min_x_lvl_3.s0.ty, 0, 32) {
                                                                    for (min_x_lvl_3.s0.tx, 0, 32) {
                                                                      min_x_lvl_3.stencil(min_x_lvl_3.s0.tx, min_x_lvl_3.s0.ty, min_x_lvl_3.s0.n) = 0
                                                                    }
                                                                  }
                                                                }
                                                                for (min_x_lvl_3.s1.n, 0, 3) {
                                                                  for (min_x_lvl_3.s1.ty, 0, 32) {
                                                                    for (min_x_lvl_3.s1.tx, 0, 32) {
                                                                      for (min_x_lvl_3.s1.r_search_lvl_3$y, -4, 9) {
                                                                        for (min_x_lvl_3.s1.r_search_lvl_3$x, -4, 9) {
                                                                          realize min_val_lvl_3.stencil([0, 32], [0, 32], [0, 3]) {
                                                                            produce min_val_lvl_3.stencil {
                                                                              for (min_val_lvl_3.s0.n, 0, 3) {
                                                                                for (min_val_lvl_3.s0.ty, 0, 32) {
                                                                                  for (min_val_lvl_3.s0.tx, 0, 32) {
                                                                                    min_val_lvl_3.stencil(min_val_lvl_3.s0.tx, min_val_lvl_3.s0.ty, min_val_lvl_3.s0.n) = (uint32)2147483647
                                                                                  }
                                                                                }
                                                                              }
                                                                              for (min_val_lvl_3.s1.n, 0, 3) {
                                                                                for (min_val_lvl_3.s1.ty, 0, 32) {
                                                                                  for (min_val_lvl_3.s1.tx, 0, 32) {
                                                                                    for (min_val_lvl_3.s1.r_search_lvl_3$y, -4, 9) {
                                                                                      for (min_val_lvl_3.s1.r_search_lvl_3$x, -4, 9) {
                                                                                        realize sum$1.stencil([min_val_lvl_3.s1.tx, 1], [min_val_lvl_3.s1.ty, 1], [min_val_lvl_3.s1.r_search_lvl_3$x, 1], [min_val_lvl_3.s1.r_search_lvl_3$y, 1], [min_val_lvl_3.s1.n, 1]) {
                                                                                          produce sum$1.stencil {
                                                                                            sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) = (uint32)0
                                                                                            for (sum$1.s1.r_tile_lvl_3$y, 0, 16) {
                                                                                              for (sum$1.s1.r_tile_lvl_3$x, 0, 16) {
                                                                                                sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) = (sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n) + uint32(abs((int16(f3.stencil(min((sum$1.s1.r_tile_lvl_3$x + (min_val_lvl_3.s1.tx*16)), 31), min((sum$1.s1.r_tile_lvl_3$y + (min_val_lvl_3.s1.ty*16)), 31), 0)) - int16(f3.stencil(max(min(((min_val_lvl_3.s1.r_search_lvl_3$x + (min_val_lvl_3.s1.tx*16)) + sum$1.s1.r_tile_lvl_3$x), 31), 0), max(min(((min_val_lvl_3.s1.r_search_lvl_3$y + (min_val_lvl_3.s1.ty*16)) + sum$1.s1.r_tile_lvl_3$y), 31), 0), min_val_lvl_3.s1.n))))))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          consume sum$1.stencil {
                                                                                            min_val_lvl_3.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.n) = min(sum$1.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.r_search_lvl_3$x, min_val_lvl_3.s1.r_search_lvl_3$y, min_val_lvl_3.s1.n), min_val_lvl_3.stencil(min_val_lvl_3.s1.tx, min_val_lvl_3.s1.ty, min_val_lvl_3.s1.n))
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            consume min_val_lvl_3.stencil {
                                                                              realize sum$1.stencil([0, 32], [0, 32], [-4, 9], [-4, 9], [0, 3]) {
                                                                                produce sum$1.stencil {
                                                                                  for (sum$1.s0.n, 0, 3) {
                                                                                    for (sum$1.s0.y_s_lvl_3, -4, 9) {
                                                                                      for (sum$1.s0.x_s_lvl_3, -4, 9) {
                                                                                        for (sum$1.s0.ty, 0, 32) {
                                                                                          for (sum$1.s0.tx, 0, 32) {
                                                                                            sum$1.stencil(sum$1.s0.tx, sum$1.s0.ty, sum$1.s0.x_s_lvl_3, sum$1.s0.y_s_lvl_3, sum$1.s0.n) = (uint32)0
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  for (sum$1.s1.n, 0, 3) {
                                                                                    for (sum$1.s1.y_s_lvl_3, -4, 9) {
                                                                                      for (sum$1.s1.x_s_lvl_3, -4, 9) {
                                                                                        for (sum$1.s1.ty, 0, 32) {
                                                                                          for (sum$1.s1.tx, 0, 32) {
                                                                                            for (sum$1.s1.r_tile_lvl_3$y, 0, 16) {
                                                                                              for (sum$1.s1.r_tile_lvl_3$x, 0, 16) {
                                                                                                sum$1.stencil(sum$1.s1.tx, sum$1.s1.ty, sum$1.s1.x_s_lvl_3, sum$1.s1.y_s_lvl_3, sum$1.s1.n) = (sum$1.stencil(sum$1.s1.tx, sum$1.s1.ty, sum$1.s1.x_s_lvl_3, sum$1.s1.y_s_lvl_3, sum$1.s1.n) + uint32(abs((int16(f3.stencil(min((sum$1.s1.r_tile_lvl_3$x + (sum$1.s1.tx*16)), 31), min((sum$1.s1.r_tile_lvl_3$y + (sum$1.s1.ty*16)), 31), 0)) - int16(f3.stencil(max(min(((sum$1.s1.x_s_lvl_3 + (sum$1.s1.tx*16)) + sum$1.s1.r_tile_lvl_3$x), 31), 0), max(min(((sum$1.s1.y_s_lvl_3 + (sum$1.s1.ty*16)) + sum$1.s1.r_tile_lvl_3$y), 31), 0), sum$1.s1.n))))))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                consume sum$1.stencil {
                                                                                  min_x_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n) = select((sum$1.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.r_search_lvl_3$x, min_x_lvl_3.s1.r_search_lvl_3$y, min_x_lvl_3.s1.n) < min_val_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n)), min_x_lvl_3.s1.r_search_lvl_3$x, min_x_lvl_3.stencil(min_x_lvl_3.s1.tx, min_x_lvl_3.s1.ty, min_x_lvl_3.s1.n))
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            consume min_x_lvl_3.stencil {
                                                              f12.stencil(f12.s0.tx, f12.s0.ty, 0, f12.s0.n) = return_second(halide_trace_helper("f12", make_struct((void *), select((f12.s0.n == 0), (int16)0, ((f13.stencil((f12.s0.tx/2), (f12.s0.ty/2), 0, f12.s0.n)*(int16)2) + int16(min_x_lvl_3.stencil(f12.s0.tx, f12.s0.ty, f12.s0.n))))), make_struct((int32_t *), f12.s0.tx, f12.s0.ty, 0, f12.s0.n), 0, 16, 1, 1, 0, 0, 4, ""), select((f12.s0.n == 0), (int16)0, ((f13.stencil((f12.s0.tx/2), (f12.s0.ty/2), 0, f12.s0.n)*(int16)2) + int16(min_x_lvl_3.stencil(f12.s0.tx, f12.s0.ty, f12.s0.n)))))
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              consume f12.stencil {
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f11", 0, 0, 0, 1))
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f11", 0, 3, 0, 63))
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f11", 0, 3, 0, 63))
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f11", 0, 0, 0, 1))
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f11", 0, 3, 0, 63))
                                                assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f11", 0, 3, 0, 63))
                                                realize f11.stencil([0, 4], [0, 4], [0, 1], [0, 3]) {
                                                  produce f11.stencil {
                                                    for (f11.s0.n, 0, 3) {
                                                      for (f11.s0.ty, 0, 4) {
                                                        for (f11.s0.tx, 0, 4) {
                                                          realize min_y_lvl_2.stencil([0, 64], [0, 64], [0, 3]) if (uint1)0 {
                                                            consume min_y_lvl_2.stencil {
                                                              realize min_x_lvl_2.stencil([0, 64], [0, 64], [0, 3]) {
                                                                produce min_x_lvl_2.stencil {
                                                                  if ((f11.s0.n != 0)) {
                                                                    for (min_x_lvl_2.s0.n, 0, 3) {
                                                                      for (min_x_lvl_2.s0.ty, 0, 64) {
                                                                        for (min_x_lvl_2.s0.tx, 0, 64) {
                                                                          min_x_lvl_2.stencil(min_x_lvl_2.s0.tx, min_x_lvl_2.s0.ty, min_x_lvl_2.s0.n) = 0
                                                                        }
                                                                      }
                                                                    }
                                                                    for (min_x_lvl_2.s1.n, 0, 3) {
                                                                      for (min_x_lvl_2.s1.ty, 0, 64) {
                                                                        for (min_x_lvl_2.s1.tx, 0, 64) {
                                                                          for (min_x_lvl_2.s1.r_search_lvl_2$y, -4, 9) {
                                                                            for (min_x_lvl_2.s1.r_search_lvl_2$x, -4, 9) {
                                                                              realize min_val_lvl_2.stencil([0, 64], [0, 64], [0, 3]) {
                                                                                produce min_val_lvl_2.stencil {
                                                                                  for (min_val_lvl_2.s0.n, 0, 3) {
                                                                                    for (min_val_lvl_2.s0.ty, 0, 64) {
                                                                                      for (min_val_lvl_2.s0.tx, 0, 64) {
                                                                                        min_val_lvl_2.stencil(min_val_lvl_2.s0.tx, min_val_lvl_2.s0.ty, min_val_lvl_2.s0.n) = (uint32)2147483647
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  for (min_val_lvl_2.s1.n, 0, 3) {
                                                                                    for (min_val_lvl_2.s1.ty, 0, 64) {
                                                                                      for (min_val_lvl_2.s1.tx, 0, 64) {
                                                                                        for (min_val_lvl_2.s1.r_search_lvl_2$y, -4, 9) {
                                                                                          for (min_val_lvl_2.s1.r_search_lvl_2$x, -4, 9) {
                                                                                            realize sum$2.stencil([min_val_lvl_2.s1.tx, 1], [min_val_lvl_2.s1.ty, 1], [min_val_lvl_2.s1.n, 1], [min_val_lvl_2.s1.r_search_lvl_2$x, 1], [min_val_lvl_2.s1.r_search_lvl_2$y, 1]) {
                                                                                              produce sum$2.stencil {
                                                                                                sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) = (uint32)0
                                                                                                for (sum$2.s1.r_tile_lvl_2$y, 0, 16) {
                                                                                                  for (sum$2.s1.r_tile_lvl_2$x, 0, 16) {
                                                                                                    sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) = (sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y) + uint32(abs((int16(f2.stencil(min(((min_val_lvl_2.s1.tx*16) + sum$2.s1.r_tile_lvl_2$x), 63), min((sum$2.s1.r_tile_lvl_2$y + (min_val_lvl_2.s1.ty*16)), 63), 0)) - int16(f2.stencil(max(min(((((min_val_lvl_2.s1.tx*16) + int32((f12.stencil((min_val_lvl_2.s1.tx/2), (min_val_lvl_2.s1.ty/2), 0, min_val_lvl_2.s1.n)*(int16)2))) + min_val_lvl_2.s1.r_search_lvl_2$x) + sum$2.s1.r_tile_lvl_2$x), 63), 0), max(min(((((min_val_lvl_2.s1.ty*16) + int32((f12.stencil((min_val_lvl_2.s1.tx/2), (min_val_lvl_2.s1.ty/2), 1, min_val_lvl_2.s1.n)*(int16)2))) + min_val_lvl_2.s1.r_search_lvl_2$y) + sum$2.s1.r_tile_lvl_2$y), 63), 0), min_val_lvl_2.s1.n))))))
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              consume sum$2.stencil {
                                                                                                min_val_lvl_2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n) = min(sum$2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n, min_val_lvl_2.s1.r_search_lvl_2$x, min_val_lvl_2.s1.r_search_lvl_2$y), min_val_lvl_2.stencil(min_val_lvl_2.s1.tx, min_val_lvl_2.s1.ty, min_val_lvl_2.s1.n))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                consume min_val_lvl_2.stencil {
                                                                                  realize sum$2.stencil([0, 64], [0, 64], [0, 3], [-4, 9], [-4, 9]) {
                                                                                    produce sum$2.stencil {
                                                                                      for (sum$2.s0.y_s_lvl_2, -4, 9) {
                                                                                        for (sum$2.s0.x_s_lvl_2, -4, 9) {
                                                                                          for (sum$2.s0.n, 0, 3) {
                                                                                            for (sum$2.s0.ty, 0, 64) {
                                                                                              for (sum$2.s0.tx, 0, 64) {
                                                                                                sum$2.stencil(sum$2.s0.tx, sum$2.s0.ty, sum$2.s0.n, sum$2.s0.x_s_lvl_2, sum$2.s0.y_s_lvl_2) = (uint32)0
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      for (sum$2.s1.y_s_lvl_2, -4, 9) {
                                                                                        for (sum$2.s1.x_s_lvl_2, -4, 9) {
                                                                                          for (sum$2.s1.n, 0, 3) {
                                                                                            for (sum$2.s1.ty, 0, 64) {
                                                                                              for (sum$2.s1.tx, 0, 64) {
                                                                                                for (sum$2.s1.r_tile_lvl_2$y, 0, 16) {
                                                                                                  for (sum$2.s1.r_tile_lvl_2$x, 0, 16) {
                                                                                                    sum$2.stencil(sum$2.s1.tx, sum$2.s1.ty, sum$2.s1.n, sum$2.s1.x_s_lvl_2, sum$2.s1.y_s_lvl_2) = (sum$2.stencil(sum$2.s1.tx, sum$2.s1.ty, sum$2.s1.n, sum$2.s1.x_s_lvl_2, sum$2.s1.y_s_lvl_2) + uint32(abs((int16(f2.stencil(min((sum$2.s1.r_tile_lvl_2$x + (sum$2.s1.tx*16)), 63), min((sum$2.s1.r_tile_lvl_2$y + (sum$2.s1.ty*16)), 63), 0)) - int16(f2.stencil(max(min((((sum$2.s1.x_s_lvl_2 + (sum$2.s1.tx*16)) + int32((f12.stencil((sum$2.s1.tx/2), (sum$2.s1.ty/2), 0, sum$2.s1.n)*(int16)2))) + sum$2.s1.r_tile_lvl_2$x), 63), 0), max(min((((sum$2.s1.y_s_lvl_2 + (sum$2.s1.ty*16)) + int32((f12.stencil((sum$2.s1.tx/2), (sum$2.s1.ty/2), 1, sum$2.s1.n)*(int16)2))) + sum$2.s1.r_tile_lvl_2$y), 63), 0), sum$2.s1.n))))))
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    consume sum$2.stencil {
                                                                                      min_x_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n) = select((sum$2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n, min_x_lvl_2.s1.r_search_lvl_2$x, min_x_lvl_2.s1.r_search_lvl_2$y) < min_val_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n)), min_x_lvl_2.s1.r_search_lvl_2$x, min_x_lvl_2.stencil(min_x_lvl_2.s1.tx, min_x_lvl_2.s1.ty, min_x_lvl_2.s1.n))
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                consume min_x_lvl_2.stencil {
                                                                  f11.stencil(f11.s0.tx, f11.s0.ty, 0, f11.s0.n) = select((f11.s0.n == 0), (int16)0, ((f12.stencil((f11.s0.tx/2), (f11.s0.ty/2), 0, f11.s0.n)*(int16)2) + int16(min_x_lvl_2.stencil(f11.s0.tx, f11.s0.ty, f11.s0.n))))
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  consume f11.stencil {
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f10", 0, 0, 0, 1))
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f10", 0, 7, 0, 127))
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f10", 0, 7, 0, 127))
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f10", 0, 0, 0, 1))
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f10", 0, 7, 0, 127))
                                                    assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f10", 0, 7, 0, 127))
                                                    realize f10.stencil([0, 8], [0, 8], [0, 1], [0, 3]) {
                                                      produce f10.stencil {
                                                        for (f10.s0.n, 0, 3) {
                                                          for (f10.s0.ty, 0, 8) {
                                                            for (f10.s0.tx, 0, 8) {
                                                              realize min_y_lvl_1.stencil([0, 128], [0, 128], [0, 3]) if (uint1)0 {
                                                                consume min_y_lvl_1.stencil {
                                                                  realize min_x_lvl_1.stencil([0, 128], [0, 128], [0, 3]) {
                                                                    produce min_x_lvl_1.stencil {
                                                                      if ((f10.s0.n != 0)) {
                                                                        for (min_x_lvl_1.s0.n, 0, 3) {
                                                                          for (min_x_lvl_1.s0.ty, 0, 128) {
                                                                            for (min_x_lvl_1.s0.tx, 0, 128) {
                                                                              min_x_lvl_1.stencil(min_x_lvl_1.s0.tx, min_x_lvl_1.s0.ty, min_x_lvl_1.s0.n) = 0
                                                                            }
                                                                          }
                                                                        }
                                                                        for (min_x_lvl_1.s1.n, 0, 3) {
                                                                          for (min_x_lvl_1.s1.ty, 0, 128) {
                                                                            for (min_x_lvl_1.s1.tx, 0, 128) {
                                                                              for (min_x_lvl_1.s1.r_search_lvl_1$y, -4, 9) {
                                                                                for (min_x_lvl_1.s1.r_search_lvl_1$x, -4, 9) {
                                                                                  realize min_val_lvl_1.stencil([0, 128], [0, 128], [0, 3]) {
                                                                                    produce min_val_lvl_1.stencil {
                                                                                      for (min_val_lvl_1.s0.n, 0, 3) {
                                                                                        for (min_val_lvl_1.s0.ty, 0, 128) {
                                                                                          for (min_val_lvl_1.s0.tx, 0, 128) {
                                                                                            min_val_lvl_1.stencil(min_val_lvl_1.s0.tx, min_val_lvl_1.s0.ty, min_val_lvl_1.s0.n) = (uint32)2147483647
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      for (min_val_lvl_1.s1.n, 0, 3) {
                                                                                        for (min_val_lvl_1.s1.ty, 0, 128) {
                                                                                          for (min_val_lvl_1.s1.tx, 0, 128) {
                                                                                            for (min_val_lvl_1.s1.r_search_lvl_1$y, -4, 9) {
                                                                                              for (min_val_lvl_1.s1.r_search_lvl_1$x, -4, 9) {
                                                                                                realize sum$3.stencil([min_val_lvl_1.s1.tx, 1], [min_val_lvl_1.s1.ty, 1], [min_val_lvl_1.s1.n, 1], [min_val_lvl_1.s1.r_search_lvl_1$x, 1], [min_val_lvl_1.s1.r_search_lvl_1$y, 1]) {
                                                                                                  produce sum$3.stencil {
                                                                                                    sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) = (uint32)0
                                                                                                    for (sum$3.s1.r_tile_lvl_1$y, 0, 16) {
                                                                                                      for (sum$3.s1.r_tile_lvl_1$x, 0, 16) {
                                                                                                        sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) = (sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y) + uint32(abs((int16(f1.stencil(min(((min_val_lvl_1.s1.tx*16) + sum$3.s1.r_tile_lvl_1$x), 127), min((sum$3.s1.r_tile_lvl_1$y + (min_val_lvl_1.s1.ty*16)), 127), 0)) - int16(f1.stencil(max(min(((((min_val_lvl_1.s1.tx*16) + int32((f11.stencil((min_val_lvl_1.s1.tx/2), (min_val_lvl_1.s1.ty/2), 0, min_val_lvl_1.s1.n)*(int16)2))) + min_val_lvl_1.s1.r_search_lvl_1$x) + sum$3.s1.r_tile_lvl_1$x), 127), 0), max(min(((((min_val_lvl_1.s1.ty*16) + int32((f11.stencil((min_val_lvl_1.s1.tx/2), (min_val_lvl_1.s1.ty/2), 1, min_val_lvl_1.s1.n)*(int16)2))) + min_val_lvl_1.s1.r_search_lvl_1$y) + sum$3.s1.r_tile_lvl_1$y), 127), 0), min_val_lvl_1.s1.n))))))
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                  consume sum$3.stencil {
                                                                                                    min_val_lvl_1.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n) = min(sum$3.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n, min_val_lvl_1.s1.r_search_lvl_1$x, min_val_lvl_1.s1.r_search_lvl_1$y), min_val_lvl_1.stencil(min_val_lvl_1.s1.tx, min_val_lvl_1.s1.ty, min_val_lvl_1.s1.n))
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    consume min_val_lvl_1.stencil {
                                                                                      realize sum$3.stencil([0, 128], [0, 128], [0, 3], [-4, 9], [-4, 9]) {
                                                                                        produce sum$3.stencil {
                                                                                          for (sum$3.s0.y_s_lvl_1, -4, 9) {
                                                                                            for (sum$3.s0.x_s_lvl_1, -4, 9) {
                                                                                              for (sum$3.s0.n, 0, 3) {
                                                                                                for (sum$3.s0.ty, 0, 128) {
                                                                                                  for (sum$3.s0.tx, 0, 128) {
                                                                                                    sum$3.stencil(sum$3.s0.tx, sum$3.s0.ty, sum$3.s0.n, sum$3.s0.x_s_lvl_1, sum$3.s0.y_s_lvl_1) = (uint32)0
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          for (sum$3.s1.y_s_lvl_1, -4, 9) {
                                                                                            for (sum$3.s1.x_s_lvl_1, -4, 9) {
                                                                                              for (sum$3.s1.n, 0, 3) {
                                                                                                for (sum$3.s1.ty, 0, 128) {
                                                                                                  for (sum$3.s1.tx, 0, 128) {
                                                                                                    for (sum$3.s1.r_tile_lvl_1$y, 0, 16) {
                                                                                                      for (sum$3.s1.r_tile_lvl_1$x, 0, 16) {
                                                                                                        sum$3.stencil(sum$3.s1.tx, sum$3.s1.ty, sum$3.s1.n, sum$3.s1.x_s_lvl_1, sum$3.s1.y_s_lvl_1) = (sum$3.stencil(sum$3.s1.tx, sum$3.s1.ty, sum$3.s1.n, sum$3.s1.x_s_lvl_1, sum$3.s1.y_s_lvl_1) + uint32(abs((int16(f1.stencil(min((sum$3.s1.r_tile_lvl_1$x + (sum$3.s1.tx*16)), 127), min((sum$3.s1.r_tile_lvl_1$y + (sum$3.s1.ty*16)), 127), 0)) - int16(f1.stencil(max(min((((sum$3.s1.x_s_lvl_1 + (sum$3.s1.tx*16)) + int32((f11.stencil((sum$3.s1.tx/2), (sum$3.s1.ty/2), 0, sum$3.s1.n)*(int16)2))) + sum$3.s1.r_tile_lvl_1$x), 127), 0), max(min((((sum$3.s1.y_s_lvl_1 + (sum$3.s1.ty*16)) + int32((f11.stencil((sum$3.s1.tx/2), (sum$3.s1.ty/2), 1, sum$3.s1.n)*(int16)2))) + sum$3.s1.r_tile_lvl_1$y), 127), 0), sum$3.s1.n))))))
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        consume sum$3.stencil {
                                                                                          min_x_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n) = select((sum$3.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n, min_x_lvl_1.s1.r_search_lvl_1$x, min_x_lvl_1.s1.r_search_lvl_1$y) < min_val_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n)), min_x_lvl_1.s1.r_search_lvl_1$x, min_x_lvl_1.stencil(min_x_lvl_1.s1.tx, min_x_lvl_1.s1.ty, min_x_lvl_1.s1.n))
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    consume min_x_lvl_1.stencil {
                                                                      f10.stencil(f10.s0.tx, f10.s0.ty, 0, f10.s0.n) = select((f10.s0.n == 0), (int16)0, ((f11.stencil((f10.s0.tx/2), (f10.s0.ty/2), 0, f10.s0.n)*(int16)2) + int16(min_x_lvl_1.stencil(f10.s0.tx, f10.s0.ty, f10.s0.n))))
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      consume f10.stencil {
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f9", 0, 0, 0, 1))
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f9", 0, 15, 0, 34))
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f9", 0, 15, 0, 38))
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("xy", "f9", 0, 0, 0, 1))
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("ty", "f9", 0, 15, 0, 34))
                                                        assert((uint1)0, halide_error_explicit_bounds_too_small("tx", "f9", 0, 15, 0, 38))
                                                        realize f9.stencil([0, 16], [0, 16], [0, 1], [0, 3]) {
                                                          produce f9.stencil {
                                                            for (f9.s0.n, 0, 3) {
                                                              for (f9.s0.ty, 0, 16) {
                                                                for (f9.s0.tx, 0, 16) {
                                                                  realize min_y_lvl_0.stencil([0, 256], [0, 256], [0, 3]) if (uint1)0 {
                                                                    consume min_y_lvl_0.stencil {
                                                                      realize min_x_lvl_0.stencil([0, 256], [0, 256], [0, 3]) {
                                                                        produce min_x_lvl_0.stencil {
                                                                          if ((f9.s0.n != 0)) {
                                                                            for (min_x_lvl_0.s0.n, 0, 3) {
                                                                              for (min_x_lvl_0.s0.ty, 0, 256) {
                                                                                for (min_x_lvl_0.s0.tx, 0, 256) {
                                                                                  min_x_lvl_0.stencil(min_x_lvl_0.s0.tx, min_x_lvl_0.s0.ty, min_x_lvl_0.s0.n) = 0
                                                                                }
                                                                              }
                                                                            }
                                                                            for (min_x_lvl_0.s1.n, 0, 3) {
                                                                              for (min_x_lvl_0.s1.ty, 0, 256) {
                                                                                for (min_x_lvl_0.s1.tx, 0, 256) {
                                                                                  for (min_x_lvl_0.s1.r_search_lvl_0$y, -4, 9) {
                                                                                    for (min_x_lvl_0.s1.r_search_lvl_0$x, -4, 9) {
                                                                                      realize min_val_lvl_0.stencil([0, 256], [0, 256], [0, 3]) {
                                                                                        produce min_val_lvl_0.stencil {
                                                                                          for (min_val_lvl_0.s0.n, 0, 3) {
                                                                                            for (min_val_lvl_0.s0.ty, 0, 256) {
                                                                                              for (min_val_lvl_0.s0.tx, 0, 256) {
                                                                                                min_val_lvl_0.stencil(min_val_lvl_0.s0.tx, min_val_lvl_0.s0.ty, min_val_lvl_0.s0.n) = (uint32)2147483647
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          for (min_val_lvl_0.s1.n, 0, 3) {
                                                                                            for (min_val_lvl_0.s1.ty, 0, 256) {
                                                                                              for (min_val_lvl_0.s1.tx, 0, 256) {
                                                                                                for (min_val_lvl_0.s1.r_search_lvl_0$y, -4, 9) {
                                                                                                  for (min_val_lvl_0.s1.r_search_lvl_0$x, -4, 9) {
                                                                                                    realize sum$4.stencil([min_val_lvl_0.s1.tx, 1], [min_val_lvl_0.s1.ty, 1], [min_val_lvl_0.s1.n, 1], [min_val_lvl_0.s1.r_search_lvl_0$x, 1], [min_val_lvl_0.s1.r_search_lvl_0$y, 1]) {
                                                                                                      produce sum$4.stencil {
                                                                                                        sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) = (uint32)0
                                                                                                        for (sum$4.s1.r_tile_lvl_0$y, 0, 16) {
                                                                                                          for (sum$4.s1.r_tile_lvl_0$x, 0, 16) {
                                                                                                            sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) = (sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y) + uint32(abs((int16(f0.stencil(min(((min_val_lvl_0.s1.tx*16) + sum$4.s1.r_tile_lvl_0$x), 255), min((sum$4.s1.r_tile_lvl_0$y + (min_val_lvl_0.s1.ty*16)), 255), 0)) - int16(f0.stencil(max(min(((((min_val_lvl_0.s1.tx*16) + int32((f10.stencil((min_val_lvl_0.s1.tx/2), (min_val_lvl_0.s1.ty/2), 0, min_val_lvl_0.s1.n)*(int16)2))) + min_val_lvl_0.s1.r_search_lvl_0$x) + sum$4.s1.r_tile_lvl_0$x), 255), 0), max(min(((((min_val_lvl_0.s1.ty*16) + int32((f10.stencil((min_val_lvl_0.s1.tx/2), (min_val_lvl_0.s1.ty/2), 1, min_val_lvl_0.s1.n)*(int16)2))) + min_val_lvl_0.s1.r_search_lvl_0$y) + sum$4.s1.r_tile_lvl_0$y), 255), 0), min_val_lvl_0.s1.n))))))
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                      consume sum$4.stencil {
                                                                                                        min_val_lvl_0.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n) = min(sum$4.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n, min_val_lvl_0.s1.r_search_lvl_0$x, min_val_lvl_0.s1.r_search_lvl_0$y), min_val_lvl_0.stencil(min_val_lvl_0.s1.tx, min_val_lvl_0.s1.ty, min_val_lvl_0.s1.n))
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        consume min_val_lvl_0.stencil {
                                                                                          realize sum$4.stencil([0, 256], [0, 256], [0, 3], [-4, 9], [-4, 9]) {
                                                                                            produce sum$4.stencil {
                                                                                              for (sum$4.s0.y_s_lvl_0, -4, 9) {
                                                                                                for (sum$4.s0.x_s_lvl_0, -4, 9) {
                                                                                                  for (sum$4.s0.n, 0, 3) {
                                                                                                    for (sum$4.s0.ty, 0, 256) {
                                                                                                      for (sum$4.s0.tx, 0, 256) {
                                                                                                        sum$4.stencil(sum$4.s0.tx, sum$4.s0.ty, sum$4.s0.n, sum$4.s0.x_s_lvl_0, sum$4.s0.y_s_lvl_0) = (uint32)0
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              for (sum$4.s1.y_s_lvl_0, -4, 9) {
                                                                                                for (sum$4.s1.x_s_lvl_0, -4, 9) {
                                                                                                  for (sum$4.s1.n, 0, 3) {
                                                                                                    for (sum$4.s1.ty, 0, 256) {
                                                                                                      for (sum$4.s1.tx, 0, 256) {
                                                                                                        for (sum$4.s1.r_tile_lvl_0$y, 0, 16) {
                                                                                                          for (sum$4.s1.r_tile_lvl_0$x, 0, 16) {
                                                                                                            sum$4.stencil(sum$4.s1.tx, sum$4.s1.ty, sum$4.s1.n, sum$4.s1.x_s_lvl_0, sum$4.s1.y_s_lvl_0) = (sum$4.stencil(sum$4.s1.tx, sum$4.s1.ty, sum$4.s1.n, sum$4.s1.x_s_lvl_0, sum$4.s1.y_s_lvl_0) + uint32(abs((int16(f0.stencil(min((sum$4.s1.r_tile_lvl_0$x + (sum$4.s1.tx*16)), 255), min((sum$4.s1.r_tile_lvl_0$y + (sum$4.s1.ty*16)), 255), 0)) - int16(f0.stencil(max(min((((sum$4.s1.x_s_lvl_0 + (sum$4.s1.tx*16)) + int32((f10.stencil((sum$4.s1.tx/2), (sum$4.s1.ty/2), 0, sum$4.s1.n)*(int16)2))) + sum$4.s1.r_tile_lvl_0$x), 255), 0), max(min((((sum$4.s1.y_s_lvl_0 + (sum$4.s1.ty*16)) + int32((f10.stencil((sum$4.s1.tx/2), (sum$4.s1.ty/2), 1, sum$4.s1.n)*(int16)2))) + sum$4.s1.r_tile_lvl_0$y), 255), 0), sum$4.s1.n))))))
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                            consume sum$4.stencil {
                                                                                              min_x_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n) = select((sum$4.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n, min_x_lvl_0.s1.r_search_lvl_0$x, min_x_lvl_0.s1.r_search_lvl_0$y) < min_val_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n)), min_x_lvl_0.s1.r_search_lvl_0$x, min_x_lvl_0.stencil(min_x_lvl_0.s1.tx, min_x_lvl_0.s1.ty, min_x_lvl_0.s1.n))
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        consume min_x_lvl_0.stencil {
                                                                          f9.stencil(f9.s0.tx, f9.s0.ty, 0, f9.s0.n) = select((f9.s0.n == 0), (int16)0, ((f10.stencil((f9.s0.tx/2), (f9.s0.ty/2), 0, f9.s0.n)*(int16)2) + int16(min_x_lvl_0.stencil(f9.s0.tx, f9.s0.ty, f9.s0.n))))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          consume f9.stencil {
                                                            realize val.stencil([0, 16], [0, 16], [0, 156], [0, 139], [0, 3]) {
                                                              produce val.stencil {
                                                                for (val.s0.n, 0, 3) {
                                                                  for (val.s0.ty_image, 0, 139) {
                                                                    for (val.s0.tx_image, 0, 156) {
                                                                      for (val.s0.yi, 0, 16) {
                                                                        for (val.s0.xi, 0, 16) {
                                                                          val.stencil(val.s0.xi, val.s0.yi, val.s0.tx_image, val.s0.ty_image, val.s0.n) = select(((((0 <= (select((val.s0.n == 0), (val.s0.tx_image*8), ((val.s0.tx_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 0, val.s0.n)*(int16)2)))) + val.s0.xi)) && ((select((val.s0.n == 0), (val.s0.tx_image*8), ((val.s0.tx_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 0, val.s0.n)*(int16)2)))) + val.s0.xi) < _halide_buffer_get_extent(0, 0))) && (0 <= (select((val.s0.n == 0), (val.s0.ty_image*8), ((val.s0.ty_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 1, val.s0.n)*(int16)2)))) + val.s0.yi))) && ((select((val.s0.n == 0), (val.s0.ty_image*8), ((val.s0.ty_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 1, val.s0.n)*(int16)2)))) + val.s0.yi) < _halide_buffer_get_extent(0, 1))), hw_input_copy.stencil((select((val.s0.n == 0), (val.s0.tx_image*8), ((val.s0.tx_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 0, val.s0.n)*(int16)2)))) + val.s0.xi), (select((val.s0.n == 0), (val.s0.ty_image*8), ((val.s0.ty_image*8) + int32((f9.stencil((val.s0.tx_image/4), (val.s0.ty_image/4), 1, val.s0.n)*(int16)2)))) + val.s0.yi), val.s0.n), (uint16)0)
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              consume val.stencil {
                                                                realize dist_tile.stencil([0, 156], [0, 139], [0, 3]) {
                                                                  produce dist_tile.stencil {
                                                                    for (dist_tile.s0.n, 0, 3) {
                                                                      for (dist_tile.s0.ty_image, 0, 139) {
                                                                        for (dist_tile.s0.tx_image, 0, 156) {
                                                                          realize sum$5.stencil([dist_tile.s0.tx_image, 1], [dist_tile.s0.ty_image, 1], [dist_tile.s0.n, 1]) {
                                                                            produce sum$5.stencil {
                                                                              sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = (uint16)0
                                                                              for (sum$5.s1.G_R_tile$y, 0, 8) {
                                                                                for (sum$5.s1.G_R_tile$x, 0, 8) {
                                                                                  sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = (sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) + abs((int16(gray.stencil(max(min(((dist_tile.s0.tx_image*4) + sum$5.s1.G_R_tile$x), ((_halide_buffer_get_extent(0, 0)/2) + -1)), 0), max(min((sum$5.s1.G_R_tile$y + (dist_tile.s0.ty_image*4)), ((_halide_buffer_get_extent(0, 1)/2) + -1)), 0), 0)) - int16(gray.stencil(max(min((((dist_tile.s0.tx_image*4) + int32(f9.stencil((dist_tile.s0.tx_image/4), (dist_tile.s0.ty_image/4), 0, dist_tile.s0.n))) + sum$5.s1.G_R_tile$x), ((_halide_buffer_get_extent(0, 0)/2) + -1)), 0), max(min((((dist_tile.s0.ty_image*4) + int32(f9.stencil((dist_tile.s0.tx_image/4), (dist_tile.s0.ty_image/4), 1, dist_tile.s0.n))) + sum$5.s1.G_R_tile$y), ((_halide_buffer_get_extent(0, 1)/2) + -1)), 0), dist_tile.s0.n)))))
                                                                                }
                                                                              }
                                                                            }
                                                                            consume sum$5.stencil {
                                                                              dist_tile.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n) = sum$5.stencil(dist_tile.s0.tx_image, dist_tile.s0.ty_image, dist_tile.s0.n)
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  consume dist_tile.stencil {
                                                                    realize dist_tile_norm.stencil([0, 156], [0, 139], [0, 3]) {
                                                                      produce dist_tile_norm.stencil {
                                                                        for (dist_tile_norm.s0.n, 0, 3) {
                                                                          for (dist_tile_norm.s0.ty_image, 0, 139) {
                                                                            for (dist_tile_norm.s0.tx_image, 0, 156) {
                                                                              dist_tile_norm.stencil(dist_tile_norm.s0.tx_image, dist_tile_norm.s0.ty_image, dist_tile_norm.s0.n) = (dist_tile.stencil(dist_tile_norm.s0.tx_image, dist_tile_norm.s0.ty_image, dist_tile_norm.s0.n)/(uint16)64)
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      consume dist_tile_norm.stencil {
                                                                        realize weight.stencil([0, 156], [0, 139], [0, 3]) {
                                                                          produce weight.stencil {
                                                                            for (weight.s0.n, 0, 3) {
                                                                              for (weight.s0.ty_image, 0, 139) {
                                                                                for (weight.s0.tx_image, 0, 156) {
                                                                                  weight.stencil(weight.s0.tx_image, weight.s0.ty_image, weight.s0.n) = select((weight.s0.n == 0), (uint16)256, ((uint16)256 - uint16(min(((max(int32((int16(dist_tile_norm.stencil(weight.s0.tx_image, weight.s0.ty_image, weight.s0.n)) + (int16)-5)), 0)*256)/21), 256))))
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          consume weight.stencil {
                                                                            realize output_tiled.stencil([0, 16], [0, 16], [0, 156], [0, 139]) {
                                                                              produce output_tiled.stencil {
                                                                                for (output_tiled.s0.ty_image, 0, 139) {
                                                                                  for (output_tiled.s0.tx_image, 0, 156) {
                                                                                    for (output_tiled.s0.yi, 0, 16) {
                                                                                      for (output_tiled.s0.xi, 0, 16) {
                                                                                        realize sum$7.stencil([output_tiled.s0.tx_image, 1], [output_tiled.s0.ty_image, 1], [output_tiled.s0.xi, 1], [output_tiled.s0.yi, 1]) {
                                                                                          produce sum$7.stencil {
                                                                                            sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) = (uint16)0
                                                                                            for (sum$7.s1.r_imgs$x, 0, 3) {
                                                                                              sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) = (sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi) + uint16(((uint32(weight.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, sum$7.s1.r_imgs$x))*uint32(val.stencil(output_tiled.s0.xi, output_tiled.s0.yi, output_tiled.s0.tx_image, output_tiled.s0.ty_image, sum$7.s1.r_imgs$x)))/(uint32)256)))
                                                                                            }
                                                                                          }
                                                                                          consume sum$7.stencil {
                                                                                            output_tiled.stencil(output_tiled.s0.xi, output_tiled.s0.yi, output_tiled.s0.tx_image, output_tiled.s0.ty_image) = sum$7.stencil(output_tiled.s0.tx_image, output_tiled.s0.ty_image, output_tiled.s0.xi, output_tiled.s0.yi)
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                              consume output_tiled.stencil {
                                                                                realize sum_weight.stencil([0, 156], [0, 139]) {
                                                                                  produce sum_weight.stencil {
                                                                                    for (sum_weight.s0.ty_image, 0, 139) {
                                                                                      for (sum_weight.s0.tx_image, 0, 156) {
                                                                                        realize sum$6.stencil([sum_weight.s0.tx_image, 1], [sum_weight.s0.ty_image, 1]) {
                                                                                          produce sum$6.stencil {
                                                                                            sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = (uint16)0
                                                                                            for (sum$6.s1.r_imgs$x, 0, 3) {
                                                                                              sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = (sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) + weight.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image, sum$6.s1.r_imgs$x))
                                                                                            }
                                                                                          }
                                                                                          consume sum$6.stencil {
                                                                                            sum_weight.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image) = sum$6.stencil(sum_weight.s0.tx_image, sum_weight.s0.ty_image)
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  consume sum_weight.stencil {
                                                                                    realize output_tiled_normalized_cosined.stencil([0, 16], [0, 16], [0, 156], [0, 139]) {
                                                                                      produce output_tiled_normalized_cosined.stencil {
                                                                                        for (output_tiled_normalized_cosined.s0.ty_image, 0, 139) {
                                                                                          for (output_tiled_normalized_cosined.s0.tx_image, 0, 156) {
                                                                                            for (output_tiled_normalized_cosined.s0.yi, 0, 16) {
                                                                                              for (output_tiled_normalized_cosined.s0.xi, 0, 16) {
                                                                                                output_tiled_normalized_cosined.stencil(output_tiled_normalized_cosined.s0.xi, output_tiled_normalized_cosined.s0.yi, output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image) = uint16(((((((1.000000f - cos_f32(((float32(output_tiled_normalized_cosined.s0.xi)*0.392699f) + 0.196350f)))*float32(output_tiled.stencil(output_tiled_normalized_cosined.s0.xi, output_tiled_normalized_cosined.s0.yi, output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image)))*(1.000000f - cos_f32(((float32(output_tiled_normalized_cosined.s0.yi)*0.392699f) + 0.196350f))))*0.250000f)/float32(sum_weight.stencil(output_tiled_normalized_cosined.s0.tx_image, output_tiled_normalized_cosined.s0.ty_image)))*256.000000f))
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      consume output_tiled_normalized_cosined.stencil {
                                                                                        realize final_merge_output.stencil([0, 1256], [0, 1120]) {
                                                                                          produce final_merge_output.stencil {
                                                                                            for (final_merge_output.s0.y, 0, 1120) {
                                                                                              for (final_merge_output.s0.x, 0, 1256) {
                                                                                                final_merge_output.stencil(final_merge_output.s0.x, final_merge_output.s0.y) = (uint16)0
                                                                                              }
                                                                                            }
                                                                                            for (final_merge_output.s1.tile_RDom$w, 0, 16) {
                                                                                              for (final_merge_output.s1.tile_RDom$z, 0, 16) {
                                                                                                for (final_merge_output.s1.tile_RDom$y, 0, 139) {
                                                                                                  for (final_merge_output.s1.tile_RDom$x, 0, 156) {
                                                                                                    final_merge_output.stencil(((final_merge_output.s1.tile_RDom$x*8) + final_merge_output.s1.tile_RDom$z), ((final_merge_output.s1.tile_RDom$y*8) + final_merge_output.s1.tile_RDom$w)) = (final_merge_output.stencil(((final_merge_output.s1.tile_RDom$x*8) + final_merge_output.s1.tile_RDom$z), ((final_merge_output.s1.tile_RDom$y*8) + final_merge_output.s1.tile_RDom$w)) + output_tiled_normalized_cosined.stencil(final_merge_output.s1.tile_RDom$z, final_merge_output.s1.tile_RDom$w, final_merge_output.s1.tile_RDom$x, final_merge_output.s1.tile_RDom$y))
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          consume final_merge_output.stencil {
                                                                                            for (provisional_output.s0.y.yi, 0, 512) {
                                                                                              for (provisional_output.s0.x.xi, 0, 512) {
                                                                                                for (provisional_output.s0.c, 0, 3) {
                                                                                                  provisional_output.glb.stencil(provisional_output.s0.x.xi, provisional_output.s0.y.yi, provisional_output.s0.c) = uint8((float32(uint8(select((1.000000f < float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))), select((1023.000000f < float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))), (uint16)1023, uint16((max(min(select((0.500000f < pow_f32((max(min((float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f)), (1.000000f - (((1.000000f - pow_f32((max(min((float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f))*(1.000000f - pow_f32((max(min((float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f)))*2.000000f)), ((pow_f32((max(min((float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f)*pow_f32((max(min((float32(int32(select((select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256))))) < (int16)0), (uint16)0, uint16(select((provisional_output.s0.c == 0), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*454)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-196)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-2)/256))), select((provisional_output.s0.c == 1), ((int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2)))))*-66)/256)) + int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*386)/256))) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*-64)/256))), (int16(((int32(select((((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) != 0)) || ((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0))), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), (((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)4)))*-186)/256)) + int16(((int32(select(((((provisional_output.s0.x.xi/124) % 2) != 0) && ((provisional_output.s0.y.yi % 2) == 0)), min(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 4)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 6)), max(final_merge_output.stencil((((((((provisional_output.s0.x.xi/124) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi/248)*2) + provisional_output.s0.y.yi) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2)) + 4)))))), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) != 0)), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))))))) + (min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 124)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 868)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2))), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2))))))))))/(uint16)4), select(((((provisional_output.s0.x.xi/124) % 2) == 0) && ((provisional_output.s0.y.yi % 2) == 0)), ((min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 124)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 372)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))) + min(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 620)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 868)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((provisional_output.s0.x.xi/2) % 62))*2) + (provisional_output.s0.x.xi % 2)) + 2), ((((provisional_output.s0.x.xi + 372)/248)*2) + provisional_output.s0.y.yi)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 2)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4)/2) + ((((((((provisional_output.s0.y.yi/2)*2) + (provisional_output.s0.x.xi/124)) + 1) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 6)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), ((((provisional_output.s0.y.yi/2) + ((provisional_output.s0.x.xi + 620)/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 2) % 4) % 2))))))))/(uint16)2), ((min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 1)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)))))) + min(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 4)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 6)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 5)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 1) % 4) % 2)) + 2)), max(final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 3)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)), final_merge_output.stencil(((((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4)/2) + (((((provisional_output.s0.x.xi/124) % 2)*64) + ((((((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2)) + 7)/4) + ((provisional_output.s0.x.xi/2) % 62)))*2)), (((((provisional_output.s0.y.yi/2) + (provisional_output.s0.x.xi/248))*2) + (((((((provisional_output.s0.x.xi/2) % 62)*4) + (((provisional_output.s0.x.xi % 2)*2) + (provisional_output.s0.y.yi % 2))) + 3) % 4) % 2)) + 4)))))))/(uint16)2)))))*442)/256)))))))))*0.000978f), 1.000978f), 0.000978f) + -0.000978f), 0.500000f))*2.000000f)), 1.000000f), 0.000000f)*1023.000000f))), (uint16)0)))*0.249267f))
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      consume provisional_output.glb.stencil {
        for (provisional_output_global_wrapper.s0.y.yi, 0, 512) {
          for (provisional_output_global_wrapper.s0.x.xi, 0, 512) {
            for (provisional_output_global_wrapper.s0.c, 0, 3) {
              provisional_output_global_wrapper.stencil(provisional_output_global_wrapper.s0.x.xi, provisional_output_global_wrapper.s0.y.yi, provisional_output_global_wrapper.s0.c) = provisional_output.glb.stencil(provisional_output_global_wrapper.s0.x.xi, provisional_output_global_wrapper.s0.y.yi, provisional_output_global_wrapper.s0.c)
            }
          }
        }
      }
    }
  }
}

xcel for .provisional_output_global_wrapper out of 1 xcels in hdr_plus
shifting hw_input_global_wrapper.glb.stencil by [-32768,-32768,0]
shifting provisional_output.glb.stencil by [0,0,0]
shifting hw_input_global_wrapper_global_wrapper.stencil by [-32768,-32768,0]
shifting hw_input_copy.stencil by [-32768,-32768,0]
shifting gray.stencil by [0,0,0]
shifting f0.stencil by [0,0,0]
shifting f1.stencil by [0,0,0]
shifting f2.stencil by [0,0,0]
shifting f3.stencil by [0,0,0]
shifting f4.stencil by [0,0,0]
shifting f13.stencil by [0,0,0,0]
shifting min_y_lvl_4.stencil by [0,0,0]
shifting min_x_lvl_4.stencil by [0,0,0]
shifting min_val_lvl_4.stencil by [0,0,0]
shifting sum.stencil by [min_val_lvl_4_s1_tx,min_val_lvl_4_s1_ty,min_val_lvl_4_s1_r_search_lvl_4_x,min_val_lvl_4_s1_r_search_lvl_4_y,min_val_lvl_4_s1_n]
shifting sum.stencil by [0,0,-4,-4,0]
shifting f12.stencil by [0,0,0,0]
shifting min_y_lvl_3.stencil by [0,0,0]
shifting min_x_lvl_3.stencil by [0,0,0]
shifting min_val_lvl_3.stencil by [0,0,0]
shifting sum$1.stencil by [min_val_lvl_3_s1_tx,min_val_lvl_3_s1_ty,min_val_lvl_3_s1_r_search_lvl_3_x,min_val_lvl_3_s1_r_search_lvl_3_y,min_val_lvl_3_s1_n]
shifting sum$1.stencil by [0,0,-4,-4,0]
couldn't find op named return_second
couldn't find op named halide_trace_helper
couldn't find op named make_struct
couldn't find op named make_struct
couldn't find op named return_second
couldn't find op named halide_trace_helper
couldn't find op named make_struct
couldn't find op named make_struct
shifting f11.stencil by [0,0,0,0]
shifting min_y_lvl_2.stencil by [0,0,0]
shifting min_x_lvl_2.stencil by [0,0,0]
shifting min_val_lvl_2.stencil by [0,0,0]
shifting sum$2.stencil by [min_val_lvl_2_s1_tx,min_val_lvl_2_s1_ty,min_val_lvl_2_s1_n,min_val_lvl_2_s1_r_search_lvl_2_x,min_val_lvl_2_s1_r_search_lvl_2_y]
  hcompute_sum_2_stencil_1->add_dynamic_load("f2_stencil"
