name: CI Test

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    env:
       LLVM_VERSION: 7.0.0
       BUILD_SYSTEM: MAKE
       CXX_: g++-7
       CC_: gcc-7
       CXX: g++-7
       CC: gcc-7
       COREIR: 1
       CGRAFLOW: 1

    steps:
    - uses: actions/checkout@v2
    - name: Install packages
      run: |
          sudo apt install -y g++-7
          sudo apt install -y libedit-dev
          sudo apt install -y libpng-dev
          
    - name: Set environment variables
      run: |
          echo "TRAVIS_BUILD_DIR=${{ github.workspace }}" >> $GITHUB_ENV
          echo "LLVM_CONFIG=${{ github.workspace }}/llvm/bin/llvm-config" >> $GITHUB_ENV
          echo "LLVM_DIR=${{ github.workspace }}/llvm/lib/llvm/cmake" >> $GITHUB_ENV
          echo "CLANG=${{ github.workspace }}/llvm/bin/clang" >> $GITHUB_ENV
          echo "COREIRCONFIG=${CXX_}" >> $GITHUB_ENV
          echo "COREIR_DIR=${{ github.workspace }}/coreir" >> $GITHUB_ENV
          echo "COREIR_PATH=${{ github.workspace }}/coreir" >> $GITHUB_ENV
          echo "FUNCBUF_DIR=${{ github.workspace }}/BufferMapping/cfunc" >> $GITHUB_ENV
          echo "RDAI_DIR=${{ github.workspace }}/rdai" >> $GITHUB_ENV
          echo "OUTPUT_REDIRECTION= " >> $GITHUB_ENV
          echo "BARVINOK_PATH=${{ github.workspace }}/clockwork/barvinok-0.41/isl" >> $GITHUB_ENV
          echo "ISL_PATH=${{ github.workspace }}/clockwork/barvinok-0.41/isl" >> $GITHUB_ENV
          echo "OPT_PATH=${{ github.workspace }}/clockwork/include" >> $GITHUB_ENV
          echo "OPT_LIB_PATH=${{ github.workspace }}/clockwork/lib" >> $GITHUB_ENV
          echo "CLKWRK_PATH=${{ github.workspace }}/clockwork" >> $GITHUB_ENV
          echo "CLOCKWORK_DIR=${{ github.workspace }}/clockwork" >> $GITHUB_ENV
          echo "LAKE_PATH=${{ github.workspace }}/lake" >> $GITHUB_ENV
          echo "HALIDE_DEBUG_REDIRECT= " >> $GITHUB_ENV

    - name: Install LLVM
      shell: bash
      run: |
          LLVM_VERSION_NUM=`echo $LLVM_VERSION | cut -b 1`
          wget -q http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz
          tar xf clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz
          mv clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04 ${TRAVIS_BUILD_DIR}/llvm

    - name: Install dependencies üñ•Ô∏è
      shell: bash
      run: |
          alias g++="g++-7"
          alias gcc="gcc-7"
      
          # compile coreir
          git clone -b master https://github.com/rdaly525/coreir.git
          cd coreir/build && cmake .. && make -j2 && cd ../..
          
          # compile clockwork
          git clone https://github.com/dillonhuff/clockwork.git -b compute-kernel-latency-naming
          cd clockwork && ./misc/install_deps_linux.sh
          make -j2 libcoreir-cgralib.so && make -j2 libclkwrk.so && cd ..
        
          # compile BufferMapping
          git clone -b new_config https://github.com/joyliu37/BufferMapping
          cd BufferMapping/cfunc && make lib -j2 && cd ../..
        
          # clone RDAI
          git clone https://github.com/thenextged/rdai.git

    - name: Install Halide
      run: |
          alias g++="g++-7"
          alias gcc="gcc-7"
          #alias clang='clang-6.0'
          #alias clang++='clang++-6.0'
          #alias llvm-config='llvm-config-6.0'
          make -j4 distrib

    - name: Run tests ‚öôÔ∏è
      shell: bash
      run: |
          make -C apps/hardware_benchmarks/tests        testtravis || exit;
          
    - name: Run handcrafted ‚öôÔ∏è
      shell: bash
      run: |
          make -C apps/hardware_benchmarks/handcrafted  testtravis || exit;
          
    - name: Run apps ‚öôÔ∏è
      shell: bash
      run: |
          make -C apps/hardware_benchmarks/apps         testtravis || exit;
          echo "Finished running tests and apps"
